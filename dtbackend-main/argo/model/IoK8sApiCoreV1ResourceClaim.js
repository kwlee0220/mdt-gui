/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoK8sApiCoreV1ResourceClaim model module.
 * @module model/IoK8sApiCoreV1ResourceClaim
 * @version VERSION
 */
class IoK8sApiCoreV1ResourceClaim {
  /**
   * Constructs a new <code>IoK8sApiCoreV1ResourceClaim</code>.
   * ResourceClaim references one entry in PodSpec.ResourceClaims.
   * @alias module:model/IoK8sApiCoreV1ResourceClaim
   * @class
   * @param name {String} Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1ResourceClaim</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1ResourceClaim} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1ResourceClaim} The populated <code>IoK8sApiCoreV1ResourceClaim</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1ResourceClaim();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('request'))
        obj.request = ApiClient.convertToType(data['request'], 'String');
    }
    return obj;
  }
}

/**
 * Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
 * @member {String} name
 */
IoK8sApiCoreV1ResourceClaim.prototype.name = undefined;

/**
 * Request is the name chosen for a request in the referenced claim. If empty, everything from the claim is made available, otherwise only the result of this request.
 * @member {String} request
 */
IoK8sApiCoreV1ResourceClaim.prototype.request = undefined;

module.exports = IoK8sApiCoreV1ResourceClaim;
