/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1TriggerParameter = require('./IoArgoprojEventsV1alpha1TriggerParameter');
const IoK8sApiCoreV1SecretKeySelector = require('./IoK8sApiCoreV1SecretKeySelector');

/**
 * The IoArgoprojEventsV1alpha1AWSLambdaTrigger model module.
 * @module model/IoArgoprojEventsV1alpha1AWSLambdaTrigger
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1AWSLambdaTrigger {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1AWSLambdaTrigger</code>.
   * @alias module:model/IoArgoprojEventsV1alpha1AWSLambdaTrigger
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1AWSLambdaTrigger</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1AWSLambdaTrigger} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1AWSLambdaTrigger} The populated <code>IoArgoprojEventsV1alpha1AWSLambdaTrigger</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1AWSLambdaTrigger();
      if (data.hasOwnProperty('accessKey'))
        obj.accessKey = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['accessKey']);
      if (data.hasOwnProperty('functionName'))
        obj.functionName = ApiClient.convertToType(data['functionName'], 'String');
      if (data.hasOwnProperty('invocationType'))
        obj.invocationType = ApiClient.convertToType(data['invocationType'], 'String');
      if (data.hasOwnProperty('parameters'))
        obj.parameters = ApiClient.convertToType(data['parameters'], [IoArgoprojEventsV1alpha1TriggerParameter]);
      if (data.hasOwnProperty('payload'))
        obj.payload = ApiClient.convertToType(data['payload'], [IoArgoprojEventsV1alpha1TriggerParameter]);
      if (data.hasOwnProperty('region'))
        obj.region = ApiClient.convertToType(data['region'], 'String');
      if (data.hasOwnProperty('roleARN'))
        obj.roleARN = ApiClient.convertToType(data['roleARN'], 'String');
      if (data.hasOwnProperty('secretKey'))
        obj.secretKey = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['secretKey']);
    }
    return obj;
  }
}

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} accessKey
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.accessKey = undefined;

/**
 * FunctionName refers to the name of the function to invoke.
 * @member {String} functionName
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.functionName = undefined;

/**
 * Choose from the following options.     * RequestResponse (default) - Invoke the function synchronously. Keep    the connection open until the function returns a response or times out.    The API response includes the function response and additional data.     * Event - Invoke the function asynchronously. Send events that fail multiple    times to the function's dead-letter queue (if it's configured). The API    response only includes a status code.     * DryRun - Validate parameter values and verify that the user or role    has permission to invoke the function. +optional
 * @member {String} invocationType
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.invocationType = undefined;

/**
 * @member {Array.<module:model/IoArgoprojEventsV1alpha1TriggerParameter>} parameters
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.parameters = undefined;

/**
 * Payload is the list of key-value extracted from an event payload to construct the request payload.
 * @member {Array.<module:model/IoArgoprojEventsV1alpha1TriggerParameter>} payload
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.payload = undefined;

/**
 * @member {String} region
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.region = undefined;

/**
 * @member {String} roleARN
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.roleARN = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} secretKey
 */
IoArgoprojEventsV1alpha1AWSLambdaTrigger.prototype.secretKey = undefined;

module.exports = IoArgoprojEventsV1alpha1AWSLambdaTrigger;
