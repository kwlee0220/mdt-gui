/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoK8sApimachineryPkgApisMetaV1OwnerReference model module.
 * @module model/IoK8sApimachineryPkgApisMetaV1OwnerReference
 * @version VERSION
 */
class IoK8sApimachineryPkgApisMetaV1OwnerReference {
  /**
   * Constructs a new <code>IoK8sApimachineryPkgApisMetaV1OwnerReference</code>.
   * OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
   * @alias module:model/IoK8sApimachineryPkgApisMetaV1OwnerReference
   * @class
   * @param apiVersion {String} API version of the referent.
   * @param kind {String} Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @param name {String} Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
   * @param uid {String} UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   */
  constructor(apiVersion, kind, name, uid) {
    this.apiVersion = apiVersion;
    this.kind = kind;
    this.name = name;
    this.uid = uid;
  }

  /**
   * Constructs a <code>IoK8sApimachineryPkgApisMetaV1OwnerReference</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApimachineryPkgApisMetaV1OwnerReference} obj Optional instance to populate.
   * @return {module:model/IoK8sApimachineryPkgApisMetaV1OwnerReference} The populated <code>IoK8sApimachineryPkgApisMetaV1OwnerReference</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApimachineryPkgApisMetaV1OwnerReference();
      if (data.hasOwnProperty('apiVersion'))
        obj.apiVersion = ApiClient.convertToType(data['apiVersion'], 'String');
      if (data.hasOwnProperty('blockOwnerDeletion'))
        obj.blockOwnerDeletion = ApiClient.convertToType(data['blockOwnerDeletion'], 'Boolean');
      if (data.hasOwnProperty('controller'))
        obj.controller = ApiClient.convertToType(data['controller'], 'Boolean');
      if (data.hasOwnProperty('kind'))
        obj.kind = ApiClient.convertToType(data['kind'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('uid'))
        obj.uid = ApiClient.convertToType(data['uid'], 'String');
    }
    return obj;
  }
}

/**
 * API version of the referent.
 * @member {String} apiVersion
 */
IoK8sApimachineryPkgApisMetaV1OwnerReference.prototype.apiVersion = undefined;

/**
 * If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
 * @member {Boolean} blockOwnerDeletion
 */
IoK8sApimachineryPkgApisMetaV1OwnerReference.prototype.blockOwnerDeletion = undefined;

/**
 * If true, this reference points to the managing controller.
 * @member {Boolean} controller
 */
IoK8sApimachineryPkgApisMetaV1OwnerReference.prototype.controller = undefined;

/**
 * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
 * @member {String} kind
 */
IoK8sApimachineryPkgApisMetaV1OwnerReference.prototype.kind = undefined;

/**
 * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
 * @member {String} name
 */
IoK8sApimachineryPkgApisMetaV1OwnerReference.prototype.name = undefined;

/**
 * UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
 * @member {String} uid
 */
IoK8sApimachineryPkgApisMetaV1OwnerReference.prototype.uid = undefined;

module.exports = IoK8sApimachineryPkgApisMetaV1OwnerReference;
