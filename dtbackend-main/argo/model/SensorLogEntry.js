/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApimachineryPkgApisMetaV1Time = require('./IoK8sApimachineryPkgApisMetaV1Time');

/**
 * The SensorLogEntry model module.
 * @module model/SensorLogEntry
 * @version VERSION
 */
class SensorLogEntry {
  /**
   * Constructs a new <code>SensorLogEntry</code>.
   * @alias module:model/SensorLogEntry
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SensorLogEntry</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SensorLogEntry} obj Optional instance to populate.
   * @return {module:model/SensorLogEntry} The populated <code>SensorLogEntry</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SensorLogEntry();
      if (data.hasOwnProperty('dependencyName'))
        obj.dependencyName = ApiClient.convertToType(data['dependencyName'], 'String');
      if (data.hasOwnProperty('eventContext'))
        obj.eventContext = ApiClient.convertToType(data['eventContext'], 'String');
      if (data.hasOwnProperty('level'))
        obj.level = ApiClient.convertToType(data['level'], 'String');
      if (data.hasOwnProperty('msg'))
        obj.msg = ApiClient.convertToType(data['msg'], 'String');
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
      if (data.hasOwnProperty('sensorName'))
        obj.sensorName = ApiClient.convertToType(data['sensorName'], 'String');
      if (data.hasOwnProperty('time'))
        obj.time = IoK8sApimachineryPkgApisMetaV1Time.constructFromObject(data['time']);
      if (data.hasOwnProperty('triggerName'))
        obj.triggerName = ApiClient.convertToType(data['triggerName'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} dependencyName
 */
SensorLogEntry.prototype.dependencyName = undefined;

/**
 * @member {String} eventContext
 */
SensorLogEntry.prototype.eventContext = undefined;

/**
 * @member {String} level
 */
SensorLogEntry.prototype.level = undefined;

/**
 * @member {String} msg
 */
SensorLogEntry.prototype.msg = undefined;

/**
 * @member {String} namespace
 */
SensorLogEntry.prototype.namespace = undefined;

/**
 * @member {String} sensorName
 */
SensorLogEntry.prototype.sensorName = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1Time} time
 */
SensorLogEntry.prototype.time = undefined;

/**
 * @member {String} triggerName
 */
SensorLogEntry.prototype.triggerName = undefined;

module.exports = SensorLogEntry;
