/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1Backoff = require('./IoArgoprojEventsV1alpha1Backoff');
const IoArgoprojEventsV1alpha1EventSourceFilter = require('./IoArgoprojEventsV1alpha1EventSourceFilter');
const IoArgoprojEventsV1alpha1TLSConfig = require('./IoArgoprojEventsV1alpha1TLSConfig');
const IoK8sApiCoreV1SecretKeySelector = require('./IoK8sApiCoreV1SecretKeySelector');

/**
 * The IoArgoprojEventsV1alpha1EmitterEventSource model module.
 * @module model/IoArgoprojEventsV1alpha1EmitterEventSource
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1EmitterEventSource {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1EmitterEventSource</code>.
   * @alias module:model/IoArgoprojEventsV1alpha1EmitterEventSource
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1EmitterEventSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1EmitterEventSource} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1EmitterEventSource} The populated <code>IoArgoprojEventsV1alpha1EmitterEventSource</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1EmitterEventSource();
      if (data.hasOwnProperty('broker'))
        obj.broker = ApiClient.convertToType(data['broker'], 'String');
      if (data.hasOwnProperty('channelKey'))
        obj.channelKey = ApiClient.convertToType(data['channelKey'], 'String');
      if (data.hasOwnProperty('channelName'))
        obj.channelName = ApiClient.convertToType(data['channelName'], 'String');
      if (data.hasOwnProperty('connectionBackoff'))
        obj.connectionBackoff = IoArgoprojEventsV1alpha1Backoff.constructFromObject(data['connectionBackoff']);
      if (data.hasOwnProperty('filter'))
        obj.filter = IoArgoprojEventsV1alpha1EventSourceFilter.constructFromObject(data['filter']);
      if (data.hasOwnProperty('jsonBody'))
        obj.jsonBody = ApiClient.convertToType(data['jsonBody'], 'Boolean');
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], {'String': 'String'});
      if (data.hasOwnProperty('password'))
        obj.password = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['password']);
      if (data.hasOwnProperty('tls'))
        obj.tls = IoArgoprojEventsV1alpha1TLSConfig.constructFromObject(data['tls']);
      if (data.hasOwnProperty('username'))
        obj.username = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['username']);
    }
    return obj;
  }
}

/**
 * Broker URI to connect to.
 * @member {String} broker
 */
module.exports.broker = undefined;

/**
 * @member {String} channelKey
 */
module.exports.channelKey = undefined;

/**
 * @member {String} channelName
 */
module.exports.channelName = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1Backoff} connectionBackoff
 */
module.exports.connectionBackoff = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1EventSourceFilter} filter
 */
module.exports.filter = undefined;

/**
 * @member {Boolean} jsonBody
 */
module.exports.jsonBody = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
module.exports.metadata = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} password
 */
module.exports.password = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1TLSConfig} tls
 */
module.exports.tls = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} username
 */
module.exports.username = undefined;

module.exports = IoArgoprojEventsV1alpha1EmitterEventSource;
