/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1CreateS3BucketOptions = require('./IoArgoprojWorkflowV1alpha1CreateS3BucketOptions');
const IoArgoprojWorkflowV1alpha1S3EncryptionOptions = require('./IoArgoprojWorkflowV1alpha1S3EncryptionOptions');
const IoK8sApiCoreV1SecretKeySelector = require('./IoK8sApiCoreV1SecretKeySelector');

/**
 * The IoArgoprojWorkflowV1alpha1S3Artifact model module.
 * @module model/IoArgoprojWorkflowV1alpha1S3Artifact
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1S3Artifact {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1S3Artifact</code>.
   * S3Artifact is the location of an S3 artifact
   * @alias module:model/IoArgoprojWorkflowV1alpha1S3Artifact
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1S3Artifact</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1S3Artifact} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1S3Artifact} The populated <code>IoArgoprojWorkflowV1alpha1S3Artifact</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1S3Artifact();
      if (data.hasOwnProperty('accessKeySecret'))
        obj.accessKeySecret = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['accessKeySecret']);
      if (data.hasOwnProperty('bucket'))
        obj.bucket = ApiClient.convertToType(data['bucket'], 'String');
      if (data.hasOwnProperty('caSecret'))
        obj.caSecret = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['caSecret']);
      if (data.hasOwnProperty('createBucketIfNotPresent'))
        obj.createBucketIfNotPresent = IoArgoprojWorkflowV1alpha1CreateS3BucketOptions.constructFromObject(data['createBucketIfNotPresent']);
      if (data.hasOwnProperty('encryptionOptions'))
        obj.encryptionOptions = IoArgoprojWorkflowV1alpha1S3EncryptionOptions.constructFromObject(data['encryptionOptions']);
      if (data.hasOwnProperty('endpoint'))
        obj.endpoint = ApiClient.convertToType(data['endpoint'], 'String');
      if (data.hasOwnProperty('insecure'))
        obj.insecure = ApiClient.convertToType(data['insecure'], 'Boolean');
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
      if (data.hasOwnProperty('region'))
        obj.region = ApiClient.convertToType(data['region'], 'String');
      if (data.hasOwnProperty('roleARN'))
        obj.roleARN = ApiClient.convertToType(data['roleARN'], 'String');
      if (data.hasOwnProperty('secretKeySecret'))
        obj.secretKeySecret = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['secretKeySecret']);
      if (data.hasOwnProperty('sessionTokenSecret'))
        obj.sessionTokenSecret = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['sessionTokenSecret']);
      if (data.hasOwnProperty('useSDKCreds'))
        obj.useSDKCreds = ApiClient.convertToType(data['useSDKCreds'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} accessKeySecret
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.accessKeySecret = undefined;

/**
 * Bucket is the name of the bucket
 * @member {String} bucket
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.bucket = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} caSecret
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.caSecret = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1CreateS3BucketOptions} createBucketIfNotPresent
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.createBucketIfNotPresent = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1S3EncryptionOptions} encryptionOptions
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.encryptionOptions = undefined;

/**
 * Endpoint is the hostname of the bucket endpoint
 * @member {String} endpoint
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.endpoint = undefined;

/**
 * Insecure will connect to the service with TLS
 * @member {Boolean} insecure
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.insecure = undefined;

/**
 * Key is the key in the bucket where the artifact resides
 * @member {String} key
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.key = undefined;

/**
 * Region contains the optional bucket region
 * @member {String} region
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.region = undefined;

/**
 * RoleARN is the Amazon Resource Name (ARN) of the role to assume.
 * @member {String} roleARN
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.roleARN = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} secretKeySecret
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.secretKeySecret = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} sessionTokenSecret
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.sessionTokenSecret = undefined;

/**
 * UseSDKCreds tells the driver to figure out credentials based on sdk defaults.
 * @member {Boolean} useSDKCreds
 */
IoArgoprojWorkflowV1alpha1S3Artifact.prototype.useSDKCreds = undefined;

module.exports = IoArgoprojWorkflowV1alpha1S3Artifact;
