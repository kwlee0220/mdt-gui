/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1ManifestFrom = require('./IoArgoprojWorkflowV1alpha1ManifestFrom');

/**
 * The IoArgoprojWorkflowV1alpha1ResourceTemplate model module.
 * @module model/IoArgoprojWorkflowV1alpha1ResourceTemplate
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1ResourceTemplate {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1ResourceTemplate</code>.
   * ResourceTemplate is a template subtype to manipulate kubernetes resources
   * @alias module:model/IoArgoprojWorkflowV1alpha1ResourceTemplate
   * @class
   * @param action {String} Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch
   */
  constructor(action) {
    this.action = action;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1ResourceTemplate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1ResourceTemplate} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1ResourceTemplate} The populated <code>IoArgoprojWorkflowV1alpha1ResourceTemplate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1ResourceTemplate();
      if (data.hasOwnProperty('action'))
        obj.action = ApiClient.convertToType(data['action'], 'String');
      if (data.hasOwnProperty('failureCondition'))
        obj.failureCondition = ApiClient.convertToType(data['failureCondition'], 'String');
      if (data.hasOwnProperty('flags'))
        obj.flags = ApiClient.convertToType(data['flags'], ['String']);
      if (data.hasOwnProperty('manifest'))
        obj.manifest = ApiClient.convertToType(data['manifest'], 'String');
      if (data.hasOwnProperty('manifestFrom'))
        obj.manifestFrom = IoArgoprojWorkflowV1alpha1ManifestFrom.constructFromObject(data['manifestFrom']);
      if (data.hasOwnProperty('mergeStrategy'))
        obj.mergeStrategy = ApiClient.convertToType(data['mergeStrategy'], 'String');
      if (data.hasOwnProperty('setOwnerReference'))
        obj.setOwnerReference = ApiClient.convertToType(data['setOwnerReference'], 'Boolean');
      if (data.hasOwnProperty('successCondition'))
        obj.successCondition = ApiClient.convertToType(data['successCondition'], 'String');
    }
    return obj;
  }
}

/**
 * Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch
 * @member {String} action
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.action = undefined;

/**
 * FailureCondition is a label selector expression which describes the conditions of the k8s resource in which the step was considered failed
 * @member {String} failureCondition
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.failureCondition = undefined;

/**
 * Flags is a set of additional options passed to kubectl before submitting a resource I.e. to disable resource validation: flags: [  \"--validate=false\"  # disable resource validation ]
 * @member {Array.<String>} flags
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.flags = undefined;

/**
 * Manifest contains the kubernetes manifest
 * @member {String} manifest
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.manifest = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1ManifestFrom} manifestFrom
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.manifestFrom = undefined;

/**
 * MergeStrategy is the strategy used to merge a patch. It defaults to \"strategic\" Must be one of: strategic, merge, json
 * @member {String} mergeStrategy
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.mergeStrategy = undefined;

/**
 * SetOwnerReference sets the reference to the workflow on the OwnerReference of generated resource.
 * @member {Boolean} setOwnerReference
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.setOwnerReference = undefined;

/**
 * SuccessCondition is a label selector expression which describes the conditions of the k8s resource in which it is acceptable to proceed to the following step
 * @member {String} successCondition
 */
IoArgoprojWorkflowV1alpha1ResourceTemplate.prototype.successCondition = undefined;

module.exports = IoArgoprojWorkflowV1alpha1ResourceTemplate;
