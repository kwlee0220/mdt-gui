/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1WorkflowSpec = require('./IoArgoprojWorkflowV1alpha1WorkflowSpec');
const IoArgoprojWorkflowV1alpha1WorkflowStatus = require('./IoArgoprojWorkflowV1alpha1WorkflowStatus');
const IoK8sApimachineryPkgApisMetaV1ObjectMeta = require('./IoK8sApimachineryPkgApisMetaV1ObjectMeta');

/**
 * The IoArgoprojWorkflowV1alpha1Workflow model module.
 * @module model/IoArgoprojWorkflowV1alpha1Workflow
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1Workflow {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1Workflow</code>.
   * Workflow is the definition of a workflow resource
   * @alias module:model/IoArgoprojWorkflowV1alpha1Workflow
   * @class
   * @param metadata {module:model/IoK8sApimachineryPkgApisMetaV1ObjectMeta} 
   * @param spec {module:model/IoArgoprojWorkflowV1alpha1WorkflowSpec} 
   */
  constructor(metadata, spec) {
    this.metadata = metadata;
    this.spec = spec;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1Workflow</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1Workflow} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1Workflow} The populated <code>IoArgoprojWorkflowV1alpha1Workflow</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1Workflow();
      if (data.hasOwnProperty('apiVersion'))
        obj.apiVersion = ApiClient.convertToType(data['apiVersion'], 'String');
      if (data.hasOwnProperty('kind'))
        obj.kind = ApiClient.convertToType(data['kind'], 'String');
      if (data.hasOwnProperty('metadata'))
        obj.metadata = IoK8sApimachineryPkgApisMetaV1ObjectMeta.constructFromObject(data['metadata']);
      if (data.hasOwnProperty('spec'))
        obj.spec = IoArgoprojWorkflowV1alpha1WorkflowSpec.constructFromObject(data['spec']);
      if (data.hasOwnProperty('status'))
        obj.status = IoArgoprojWorkflowV1alpha1WorkflowStatus.constructFromObject(data['status']);
    }
    return obj;
  }
}

/**
 * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources
 * @member {String} apiVersion
 */
IoArgoprojWorkflowV1alpha1Workflow.prototype.apiVersion = undefined;

/**
 * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
 * @member {String} kind
 */
IoArgoprojWorkflowV1alpha1Workflow.prototype.kind = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1ObjectMeta} metadata
 */
IoArgoprojWorkflowV1alpha1Workflow.prototype.metadata = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1WorkflowSpec} spec
 */
IoArgoprojWorkflowV1alpha1Workflow.prototype.spec = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1WorkflowStatus} status
 */
IoArgoprojWorkflowV1alpha1Workflow.prototype.status = undefined;

module.exports = IoArgoprojWorkflowV1alpha1Workflow;
