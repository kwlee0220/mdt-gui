/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1ResourceFilter = require('./IoArgoprojEventsV1alpha1ResourceFilter');
const IoK8sApimachineryPkgApisMetaV1GroupVersionResource = require('./IoK8sApimachineryPkgApisMetaV1GroupVersionResource');

/**
 * The IoArgoprojEventsV1alpha1ResourceEventSource model module.
 * @module model/IoArgoprojEventsV1alpha1ResourceEventSource
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1ResourceEventSource {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1ResourceEventSource</code>.
   * ResourceEventSource refers to a event-source for K8s resource related events.
   * @alias module:model/IoArgoprojEventsV1alpha1ResourceEventSource
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1ResourceEventSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1ResourceEventSource} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1ResourceEventSource} The populated <code>IoArgoprojEventsV1alpha1ResourceEventSource</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1ResourceEventSource();
      if (data.hasOwnProperty('eventTypes'))
        obj.eventTypes = ApiClient.convertToType(data['eventTypes'], ['String']);
      if (data.hasOwnProperty('filter'))
        obj.filter = IoArgoprojEventsV1alpha1ResourceFilter.constructFromObject(data['filter']);
      if (data.hasOwnProperty('groupVersionResource'))
        obj.groupVersionResource = IoK8sApimachineryPkgApisMetaV1GroupVersionResource.constructFromObject(data['groupVersionResource']);
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], {'String': 'String'});
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
    }
    return obj;
  }
}

/**
 * EventTypes is the list of event type to watch. Possible values are - ADD, UPDATE and DELETE.
 * @member {Array.<String>} eventTypes
 */
IoArgoprojEventsV1alpha1ResourceEventSource.prototype.eventTypes = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1ResourceFilter} filter
 */
IoArgoprojEventsV1alpha1ResourceEventSource.prototype.filter = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1GroupVersionResource} groupVersionResource
 */
IoArgoprojEventsV1alpha1ResourceEventSource.prototype.groupVersionResource = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
IoArgoprojEventsV1alpha1ResourceEventSource.prototype.metadata = undefined;

/**
 * @member {String} namespace
 */
IoArgoprojEventsV1alpha1ResourceEventSource.prototype.namespace = undefined;

module.exports = IoArgoprojEventsV1alpha1ResourceEventSource;
