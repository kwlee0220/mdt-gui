/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1GitCreds = require('./IoArgoprojEventsV1alpha1GitCreds');
const IoArgoprojEventsV1alpha1GitRemoteConfig = require('./IoArgoprojEventsV1alpha1GitRemoteConfig');
const IoK8sApiCoreV1SecretKeySelector = require('./IoK8sApiCoreV1SecretKeySelector');

/**
 * The IoArgoprojEventsV1alpha1GitArtifact model module.
 * @module model/IoArgoprojEventsV1alpha1GitArtifact
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1GitArtifact {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1GitArtifact</code>.
   * @alias module:model/IoArgoprojEventsV1alpha1GitArtifact
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1GitArtifact</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1GitArtifact} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1GitArtifact} The populated <code>IoArgoprojEventsV1alpha1GitArtifact</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1GitArtifact();
      if (data.hasOwnProperty('branch'))
        obj.branch = ApiClient.convertToType(data['branch'], 'String');
      if (data.hasOwnProperty('cloneDirectory'))
        obj.cloneDirectory = ApiClient.convertToType(data['cloneDirectory'], 'String');
      if (data.hasOwnProperty('creds'))
        obj.creds = IoArgoprojEventsV1alpha1GitCreds.constructFromObject(data['creds']);
      if (data.hasOwnProperty('filePath'))
        obj.filePath = ApiClient.convertToType(data['filePath'], 'String');
      if (data.hasOwnProperty('insecureIgnoreHostKey'))
        obj.insecureIgnoreHostKey = ApiClient.convertToType(data['insecureIgnoreHostKey'], 'Boolean');
      if (data.hasOwnProperty('ref'))
        obj.ref = ApiClient.convertToType(data['ref'], 'String');
      if (data.hasOwnProperty('remote'))
        obj.remote = IoArgoprojEventsV1alpha1GitRemoteConfig.constructFromObject(data['remote']);
      if (data.hasOwnProperty('sshKeySecret'))
        obj.sshKeySecret = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['sshKeySecret']);
      if (data.hasOwnProperty('tag'))
        obj.tag = ApiClient.convertToType(data['tag'], 'String');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} branch
 */
module.exports.branch = undefined;

/**
 * Directory to clone the repository. We clone complete directory because GitArtifact is not limited to any specific Git service providers. Hence we don't use any specific git provider client.
 * @member {String} cloneDirectory
 */
module.exports.cloneDirectory = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1GitCreds} creds
 */
module.exports.creds = undefined;

/**
 * @member {String} filePath
 */
module.exports.filePath = undefined;

/**
 * @member {Boolean} insecureIgnoreHostKey
 */
module.exports.insecureIgnoreHostKey = undefined;

/**
 * @member {String} ref
 */
module.exports.ref = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1GitRemoteConfig} remote
 */
module.exports.remote = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} sshKeySecret
 */
module.exports.sshKeySecret = undefined;

/**
 * @member {String} tag
 */
module.exports.tag = undefined;

/**
 * @member {String} url
 */
module.exports.url = undefined;

module.exports = IoArgoprojEventsV1alpha1GitArtifact;
