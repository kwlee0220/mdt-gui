/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1EventDependencyFilter = require('./IoArgoprojEventsV1alpha1EventDependencyFilter');
const IoArgoprojEventsV1alpha1EventDependencyTransformer = require('./IoArgoprojEventsV1alpha1EventDependencyTransformer');

/**
 * The IoArgoprojEventsV1alpha1EventDependency model module.
 * @module model/IoArgoprojEventsV1alpha1EventDependency
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1EventDependency {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1EventDependency</code>.
   * @alias module:model/IoArgoprojEventsV1alpha1EventDependency
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1EventDependency</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1EventDependency} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1EventDependency} The populated <code>IoArgoprojEventsV1alpha1EventDependency</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1EventDependency();
      if (data.hasOwnProperty('eventName'))
        obj.eventName = ApiClient.convertToType(data['eventName'], 'String');
      if (data.hasOwnProperty('eventSourceName'))
        obj.eventSourceName = ApiClient.convertToType(data['eventSourceName'], 'String');
      if (data.hasOwnProperty('filters'))
        obj.filters = IoArgoprojEventsV1alpha1EventDependencyFilter.constructFromObject(data['filters']);
      if (data.hasOwnProperty('filtersLogicalOperator'))
        obj.filtersLogicalOperator = ApiClient.convertToType(data['filtersLogicalOperator'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('transform'))
        obj.transform = IoArgoprojEventsV1alpha1EventDependencyTransformer.constructFromObject(data['transform']);
    }
    return obj;
  }
}

/**
 * @member {String} eventName
 */
IoArgoprojEventsV1alpha1EventDependency.prototype.eventName = undefined;

/**
 * @member {String} eventSourceName
 */
IoArgoprojEventsV1alpha1EventDependency.prototype.eventSourceName = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1EventDependencyFilter} filters
 */
IoArgoprojEventsV1alpha1EventDependency.prototype.filters = undefined;

/**
 * FiltersLogicalOperator defines how different filters are evaluated together. Available values: and (&&), or (||) Is optional and if left blank treated as and (&&).
 * @member {String} filtersLogicalOperator
 */
IoArgoprojEventsV1alpha1EventDependency.prototype.filtersLogicalOperator = undefined;

/**
 * @member {String} name
 */
IoArgoprojEventsV1alpha1EventDependency.prototype.name = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1EventDependencyTransformer} transform
 */
IoArgoprojEventsV1alpha1EventDependency.prototype.transform = undefined;

module.exports = IoArgoprojEventsV1alpha1EventDependency;
