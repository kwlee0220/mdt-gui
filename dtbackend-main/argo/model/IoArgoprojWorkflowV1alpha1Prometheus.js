/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1Counter = require('./IoArgoprojWorkflowV1alpha1Counter');
const IoArgoprojWorkflowV1alpha1Gauge = require('./IoArgoprojWorkflowV1alpha1Gauge');
const IoArgoprojWorkflowV1alpha1Histogram = require('./IoArgoprojWorkflowV1alpha1Histogram');
const IoArgoprojWorkflowV1alpha1MetricLabel = require('./IoArgoprojWorkflowV1alpha1MetricLabel');

/**
 * The IoArgoprojWorkflowV1alpha1Prometheus model module.
 * @module model/IoArgoprojWorkflowV1alpha1Prometheus
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1Prometheus {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1Prometheus</code>.
   * Prometheus is a prometheus metric to be emitted
   * @alias module:model/IoArgoprojWorkflowV1alpha1Prometheus
   * @class
   * @param help {String} Help is a string that describes the metric
   * @param name {String} Name is the name of the metric
   */
  constructor(help, name) {
    this.help = help;
    this.name = name;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1Prometheus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1Prometheus} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1Prometheus} The populated <code>IoArgoprojWorkflowV1alpha1Prometheus</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1Prometheus();
      if (data.hasOwnProperty('counter'))
        obj.counter = IoArgoprojWorkflowV1alpha1Counter.constructFromObject(data['counter']);
      if (data.hasOwnProperty('gauge'))
        obj.gauge = IoArgoprojWorkflowV1alpha1Gauge.constructFromObject(data['gauge']);
      if (data.hasOwnProperty('help'))
        obj.help = ApiClient.convertToType(data['help'], 'String');
      if (data.hasOwnProperty('histogram'))
        obj.histogram = IoArgoprojWorkflowV1alpha1Histogram.constructFromObject(data['histogram']);
      if (data.hasOwnProperty('labels'))
        obj.labels = ApiClient.convertToType(data['labels'], [IoArgoprojWorkflowV1alpha1MetricLabel]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('when'))
        obj.when = ApiClient.convertToType(data['when'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1Counter} counter
 */
IoArgoprojWorkflowV1alpha1Prometheus.prototype.counter = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1Gauge} gauge
 */
IoArgoprojWorkflowV1alpha1Prometheus.prototype.gauge = undefined;

/**
 * Help is a string that describes the metric
 * @member {String} help
 */
IoArgoprojWorkflowV1alpha1Prometheus.prototype.help = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1Histogram} histogram
 */
IoArgoprojWorkflowV1alpha1Prometheus.prototype.histogram = undefined;

/**
 * Labels is a list of metric labels
 * @member {Array.<module:model/IoArgoprojWorkflowV1alpha1MetricLabel>} labels
 */
IoArgoprojWorkflowV1alpha1Prometheus.prototype.labels = undefined;

/**
 * Name is the name of the metric
 * @member {String} name
 */
IoArgoprojWorkflowV1alpha1Prometheus.prototype.name = undefined;

/**
 * When is a conditional statement that decides when to emit the metric
 * @member {String} when
 */
IoArgoprojWorkflowV1alpha1Prometheus.prototype.when = undefined;

module.exports = IoArgoprojWorkflowV1alpha1Prometheus;
