/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1ArtifactRepository = require('./IoArgoprojWorkflowV1alpha1ArtifactRepository');

/**
 * The IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus model module.
 * @module model/IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus</code>.
   * @alias module:model/IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus} The populated <code>IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus();
      if (data.hasOwnProperty('artifactRepository'))
        obj.artifactRepository = IoArgoprojWorkflowV1alpha1ArtifactRepository.constructFromObject(data['artifactRepository']);
      if (data.hasOwnProperty('configMap'))
        obj.configMap = ApiClient.convertToType(data['configMap'], 'String');
      if (data.hasOwnProperty('default'))
        obj._default = ApiClient.convertToType(data['default'], 'Boolean');
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1ArtifactRepository} artifactRepository
 */
IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.prototype.artifactRepository = undefined;

/**
 * The name of the config map. Defaults to \"artifact-repositories\".
 * @member {String} configMap
 */
IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.prototype.configMap = undefined;

/**
 * If this ref represents the default artifact repository, rather than a config map.
 * @member {Boolean} _default
 */
IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.prototype._default = undefined;

/**
 * The config map key. Defaults to the value of the \"workflows.argoproj.io/default-artifact-repository\" annotation.
 * @member {String} key
 */
IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.prototype.key = undefined;

/**
 * The namespace of the config map. Defaults to the workflow's namespace, or the controller's namespace (if found).
 * @member {String} namespace
 */
IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus.prototype.namespace = undefined;

module.exports = IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus;
