/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoK8sApiCoreV1TypedObjectReference model module.
 * @module model/IoK8sApiCoreV1TypedObjectReference
 * @version VERSION
 */
class IoK8sApiCoreV1TypedObjectReference {
  /**
   * Constructs a new <code>IoK8sApiCoreV1TypedObjectReference</code>.
   * @alias module:model/IoK8sApiCoreV1TypedObjectReference
   * @class
   * @param kind {String} Kind is the type of resource being referenced
   * @param name {String} Name is the name of resource being referenced
   */
  constructor(kind, name) {
    this.kind = kind;
    this.name = name;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1TypedObjectReference</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1TypedObjectReference} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1TypedObjectReference} The populated <code>IoK8sApiCoreV1TypedObjectReference</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1TypedObjectReference();
      if (data.hasOwnProperty('apiGroup'))
        obj.apiGroup = ApiClient.convertToType(data['apiGroup'], 'String');
      if (data.hasOwnProperty('kind'))
        obj.kind = ApiClient.convertToType(data['kind'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
    }
    return obj;
  }
}

/**
 * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
 * @member {String} apiGroup
 */
IoK8sApiCoreV1TypedObjectReference.prototype.apiGroup = undefined;

/**
 * Kind is the type of resource being referenced
 * @member {String} kind
 */
IoK8sApiCoreV1TypedObjectReference.prototype.kind = undefined;

/**
 * Name is the name of resource being referenced
 * @member {String} name
 */
IoK8sApiCoreV1TypedObjectReference.prototype.name = undefined;

/**
 * Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
 * @member {String} namespace
 */
IoK8sApiCoreV1TypedObjectReference.prototype.namespace = undefined;

module.exports = IoK8sApiCoreV1TypedObjectReference;
