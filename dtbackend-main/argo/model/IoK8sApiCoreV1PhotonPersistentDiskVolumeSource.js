/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoK8sApiCoreV1PhotonPersistentDiskVolumeSource model module.
 * @module model/IoK8sApiCoreV1PhotonPersistentDiskVolumeSource
 * @version VERSION
 */
class IoK8sApiCoreV1PhotonPersistentDiskVolumeSource {
  /**
   * Constructs a new <code>IoK8sApiCoreV1PhotonPersistentDiskVolumeSource</code>.
   * Represents a Photon Controller persistent disk resource.
   * @alias module:model/IoK8sApiCoreV1PhotonPersistentDiskVolumeSource
   * @class
   * @param pdID {String} pdID is the ID that identifies Photon Controller persistent disk
   */
  constructor(pdID) {
    this.pdID = pdID;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1PhotonPersistentDiskVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1PhotonPersistentDiskVolumeSource} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1PhotonPersistentDiskVolumeSource} The populated <code>IoK8sApiCoreV1PhotonPersistentDiskVolumeSource</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1PhotonPersistentDiskVolumeSource();
      if (data.hasOwnProperty('fsType'))
        obj.fsType = ApiClient.convertToType(data['fsType'], 'String');
      if (data.hasOwnProperty('pdID'))
        obj.pdID = ApiClient.convertToType(data['pdID'], 'String');
    }
    return obj;
  }
}

/**
 * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
 * @member {String} fsType
 */
IoK8sApiCoreV1PhotonPersistentDiskVolumeSource.prototype.fsType = undefined;

/**
 * pdID is the ID that identifies Photon Controller persistent disk
 * @member {String} pdID
 */
IoK8sApiCoreV1PhotonPersistentDiskVolumeSource.prototype.pdID = undefined;

module.exports = IoK8sApiCoreV1PhotonPersistentDiskVolumeSource;
