/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1ContainerNode = require('./IoArgoprojWorkflowV1alpha1ContainerNode');
const IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy = require('./IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy');
const IoK8sApiCoreV1VolumeMount = require('./IoK8sApiCoreV1VolumeMount');

/**
 * The IoArgoprojWorkflowV1alpha1ContainerSetTemplate model module.
 * @module model/IoArgoprojWorkflowV1alpha1ContainerSetTemplate
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1ContainerSetTemplate {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1ContainerSetTemplate</code>.
   * @alias module:model/IoArgoprojWorkflowV1alpha1ContainerSetTemplate
   * @class
   * @param containers {Array.<module:model/IoArgoprojWorkflowV1alpha1ContainerNode>} 
   */
  constructor(containers) {
    this.containers = containers;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1ContainerSetTemplate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1ContainerSetTemplate} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1ContainerSetTemplate} The populated <code>IoArgoprojWorkflowV1alpha1ContainerSetTemplate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1ContainerSetTemplate();
      if (data.hasOwnProperty('containers'))
        obj.containers = ApiClient.convertToType(data['containers'], [IoArgoprojWorkflowV1alpha1ContainerNode]);
      if (data.hasOwnProperty('retryStrategy'))
        obj.retryStrategy = IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy.constructFromObject(data['retryStrategy']);
      if (data.hasOwnProperty('volumeMounts'))
        obj.volumeMounts = ApiClient.convertToType(data['volumeMounts'], [IoK8sApiCoreV1VolumeMount]);
    }
    return obj;
  }
}

/**
 * @member {Array.<module:model/IoArgoprojWorkflowV1alpha1ContainerNode>} containers
 */
IoArgoprojWorkflowV1alpha1ContainerSetTemplate.prototype.containers = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1ContainerSetRetryStrategy} retryStrategy
 */
IoArgoprojWorkflowV1alpha1ContainerSetTemplate.prototype.retryStrategy = undefined;

/**
 * @member {Array.<module:model/IoK8sApiCoreV1VolumeMount>} volumeMounts
 */
IoArgoprojWorkflowV1alpha1ContainerSetTemplate.prototype.volumeMounts = undefined;

module.exports = IoArgoprojWorkflowV1alpha1ContainerSetTemplate;
