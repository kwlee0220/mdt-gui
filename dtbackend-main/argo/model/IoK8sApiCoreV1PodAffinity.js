/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1PodAffinityTerm = require('./IoK8sApiCoreV1PodAffinityTerm');
const IoK8sApiCoreV1WeightedPodAffinityTerm = require('./IoK8sApiCoreV1WeightedPodAffinityTerm');

/**
 * The IoK8sApiCoreV1PodAffinity model module.
 * @module model/IoK8sApiCoreV1PodAffinity
 * @version VERSION
 */
class IoK8sApiCoreV1PodAffinity {
  /**
   * Constructs a new <code>IoK8sApiCoreV1PodAffinity</code>.
   * Pod affinity is a group of inter pod affinity scheduling rules.
   * @alias module:model/IoK8sApiCoreV1PodAffinity
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1PodAffinity</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1PodAffinity} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1PodAffinity} The populated <code>IoK8sApiCoreV1PodAffinity</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1PodAffinity();
      if (data.hasOwnProperty('preferredDuringSchedulingIgnoredDuringExecution'))
        obj.preferredDuringSchedulingIgnoredDuringExecution = ApiClient.convertToType(data['preferredDuringSchedulingIgnoredDuringExecution'], [IoK8sApiCoreV1WeightedPodAffinityTerm]);
      if (data.hasOwnProperty('requiredDuringSchedulingIgnoredDuringExecution'))
        obj.requiredDuringSchedulingIgnoredDuringExecution = ApiClient.convertToType(data['requiredDuringSchedulingIgnoredDuringExecution'], [IoK8sApiCoreV1PodAffinityTerm]);
    }
    return obj;
  }
}

/**
 * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
 * @member {Array.<module:model/IoK8sApiCoreV1WeightedPodAffinityTerm>} preferredDuringSchedulingIgnoredDuringExecution
 */
IoK8sApiCoreV1PodAffinity.prototype.preferredDuringSchedulingIgnoredDuringExecution = undefined;

/**
 * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
 * @member {Array.<module:model/IoK8sApiCoreV1PodAffinityTerm>} requiredDuringSchedulingIgnoredDuringExecution
 */
IoK8sApiCoreV1PodAffinity.prototype.requiredDuringSchedulingIgnoredDuringExecution = undefined;

module.exports = IoK8sApiCoreV1PodAffinity;
