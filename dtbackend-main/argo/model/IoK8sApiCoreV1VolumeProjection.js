/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1ClusterTrustBundleProjection = require('./IoK8sApiCoreV1ClusterTrustBundleProjection');
const IoK8sApiCoreV1ConfigMapProjection = require('./IoK8sApiCoreV1ConfigMapProjection');
const IoK8sApiCoreV1DownwardAPIProjection = require('./IoK8sApiCoreV1DownwardAPIProjection');
const IoK8sApiCoreV1SecretProjection = require('./IoK8sApiCoreV1SecretProjection');
const IoK8sApiCoreV1ServiceAccountTokenProjection = require('./IoK8sApiCoreV1ServiceAccountTokenProjection');

/**
 * The IoK8sApiCoreV1VolumeProjection model module.
 * @module model/IoK8sApiCoreV1VolumeProjection
 * @version VERSION
 */
class IoK8sApiCoreV1VolumeProjection {
  /**
   * Constructs a new <code>IoK8sApiCoreV1VolumeProjection</code>.
   * Projection that may be projected along with other supported volume types. Exactly one of these fields must be set.
   * @alias module:model/IoK8sApiCoreV1VolumeProjection
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1VolumeProjection</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1VolumeProjection} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1VolumeProjection} The populated <code>IoK8sApiCoreV1VolumeProjection</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1VolumeProjection();
      if (data.hasOwnProperty('clusterTrustBundle'))
        obj.clusterTrustBundle = IoK8sApiCoreV1ClusterTrustBundleProjection.constructFromObject(data['clusterTrustBundle']);
      if (data.hasOwnProperty('configMap'))
        obj.configMap = IoK8sApiCoreV1ConfigMapProjection.constructFromObject(data['configMap']);
      if (data.hasOwnProperty('downwardAPI'))
        obj.downwardAPI = IoK8sApiCoreV1DownwardAPIProjection.constructFromObject(data['downwardAPI']);
      if (data.hasOwnProperty('secret'))
        obj.secret = IoK8sApiCoreV1SecretProjection.constructFromObject(data['secret']);
      if (data.hasOwnProperty('serviceAccountToken'))
        obj.serviceAccountToken = IoK8sApiCoreV1ServiceAccountTokenProjection.constructFromObject(data['serviceAccountToken']);
    }
    return obj;
  }
}

/**
 * @member {module:model/IoK8sApiCoreV1ClusterTrustBundleProjection} clusterTrustBundle
 */
IoK8sApiCoreV1VolumeProjection.prototype.clusterTrustBundle = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1ConfigMapProjection} configMap
 */
IoK8sApiCoreV1VolumeProjection.prototype.configMap = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1DownwardAPIProjection} downwardAPI
 */
IoK8sApiCoreV1VolumeProjection.prototype.downwardAPI = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretProjection} secret
 */
IoK8sApiCoreV1VolumeProjection.prototype.secret = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1ServiceAccountTokenProjection} serviceAccountToken
 */
IoK8sApiCoreV1VolumeProjection.prototype.serviceAccountToken = undefined;

module.exports = IoK8sApiCoreV1VolumeProjection;
