/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1Cache = require('./IoArgoprojWorkflowV1alpha1Cache');

/**
 * The IoArgoprojWorkflowV1alpha1Memoize model module.
 * @module model/IoArgoprojWorkflowV1alpha1Memoize
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1Memoize {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1Memoize</code>.
   * Memoization enables caching for the Outputs of the template
   * @alias module:model/IoArgoprojWorkflowV1alpha1Memoize
   * @class
   * @param cache {module:model/IoArgoprojWorkflowV1alpha1Cache} 
   * @param key {String} Key is the key to use as the caching key
   * @param maxAge {String} MaxAge is the maximum age (e.g. \"180s\", \"24h\") of an entry that is still considered valid. If an entry is older than the MaxAge, it will be ignored.
   */
  constructor(cache, key, maxAge) {
    this.cache = cache;
    this.key = key;
    this.maxAge = maxAge;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1Memoize</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1Memoize} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1Memoize} The populated <code>IoArgoprojWorkflowV1alpha1Memoize</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1Memoize();
      if (data.hasOwnProperty('cache'))
        obj.cache = IoArgoprojWorkflowV1alpha1Cache.constructFromObject(data['cache']);
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
      if (data.hasOwnProperty('maxAge'))
        obj.maxAge = ApiClient.convertToType(data['maxAge'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1Cache} cache
 */
IoArgoprojWorkflowV1alpha1Memoize.prototype.cache = undefined;

/**
 * Key is the key to use as the caching key
 * @member {String} key
 */
IoArgoprojWorkflowV1alpha1Memoize.prototype.key = undefined;

/**
 * MaxAge is the maximum age (e.g. \"180s\", \"24h\") of an entry that is still considered valid. If an entry is older than the MaxAge, it will be ignored.
 * @member {String} maxAge
 */
IoArgoprojWorkflowV1alpha1Memoize.prototype.maxAge = undefined;

module.exports = IoArgoprojWorkflowV1alpha1Memoize;
