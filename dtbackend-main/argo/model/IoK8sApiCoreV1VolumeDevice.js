/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoK8sApiCoreV1VolumeDevice model module.
 * @module model/IoK8sApiCoreV1VolumeDevice
 * @version VERSION
 */
class IoK8sApiCoreV1VolumeDevice {
  /**
   * Constructs a new <code>IoK8sApiCoreV1VolumeDevice</code>.
   * volumeDevice describes a mapping of a raw block device within a container.
   * @alias module:model/IoK8sApiCoreV1VolumeDevice
   * @class
   * @param devicePath {String} devicePath is the path inside of the container that the device will be mapped to.
   * @param name {String} name must match the name of a persistentVolumeClaim in the pod
   */
  constructor(devicePath, name) {
    this.devicePath = devicePath;
    this.name = name;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1VolumeDevice</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1VolumeDevice} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1VolumeDevice} The populated <code>IoK8sApiCoreV1VolumeDevice</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1VolumeDevice();
      if (data.hasOwnProperty('devicePath'))
        obj.devicePath = ApiClient.convertToType(data['devicePath'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
    }
    return obj;
  }
}

/**
 * devicePath is the path inside of the container that the device will be mapped to.
 * @member {String} devicePath
 */
IoK8sApiCoreV1VolumeDevice.prototype.devicePath = undefined;

/**
 * name must match the name of a persistentVolumeClaim in the pod
 * @member {String} name
 */
IoK8sApiCoreV1VolumeDevice.prototype.name = undefined;

module.exports = IoK8sApiCoreV1VolumeDevice;
