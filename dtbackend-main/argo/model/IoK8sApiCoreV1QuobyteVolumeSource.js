/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoK8sApiCoreV1QuobyteVolumeSource model module.
 * @module model/IoK8sApiCoreV1QuobyteVolumeSource
 * @version VERSION
 */
class IoK8sApiCoreV1QuobyteVolumeSource {
  /**
   * Constructs a new <code>IoK8sApiCoreV1QuobyteVolumeSource</code>.
   * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
   * @alias module:model/IoK8sApiCoreV1QuobyteVolumeSource
   * @class
   * @param registry {String} registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   * @param volume {String} volume is a string that references an already created Quobyte volume by name.
   */
  constructor(registry, volume) {
    this.registry = registry;
    this.volume = volume;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1QuobyteVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1QuobyteVolumeSource} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1QuobyteVolumeSource} The populated <code>IoK8sApiCoreV1QuobyteVolumeSource</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1QuobyteVolumeSource();
      if (data.hasOwnProperty('group'))
        obj.group = ApiClient.convertToType(data['group'], 'String');
      if (data.hasOwnProperty('readOnly'))
        obj.readOnly = ApiClient.convertToType(data['readOnly'], 'Boolean');
      if (data.hasOwnProperty('registry'))
        obj.registry = ApiClient.convertToType(data['registry'], 'String');
      if (data.hasOwnProperty('tenant'))
        obj.tenant = ApiClient.convertToType(data['tenant'], 'String');
      if (data.hasOwnProperty('user'))
        obj.user = ApiClient.convertToType(data['user'], 'String');
      if (data.hasOwnProperty('volume'))
        obj.volume = ApiClient.convertToType(data['volume'], 'String');
    }
    return obj;
  }
}

/**
 * group to map volume access to Default is no group
 * @member {String} group
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype.group = undefined;

/**
 * readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
 * @member {Boolean} readOnly
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype.readOnly = undefined;

/**
 * registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
 * @member {String} registry
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype.registry = undefined;

/**
 * tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
 * @member {String} tenant
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype.tenant = undefined;

/**
 * user to map volume access to Defaults to serivceaccount user
 * @member {String} user
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype.user = undefined;

/**
 * volume is a string that references an already created Quobyte volume by name.
 * @member {String} volume
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype.volume = undefined;

module.exports = IoK8sApiCoreV1QuobyteVolumeSource;
