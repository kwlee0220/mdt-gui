/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1StopStrategy = require('./IoArgoprojWorkflowV1alpha1StopStrategy');
const IoArgoprojWorkflowV1alpha1WorkflowSpec = require('./IoArgoprojWorkflowV1alpha1WorkflowSpec');
const IoK8sApimachineryPkgApisMetaV1ObjectMeta = require('./IoK8sApimachineryPkgApisMetaV1ObjectMeta');

/**
 * The IoArgoprojWorkflowV1alpha1CronWorkflowSpec model module.
 * @module model/IoArgoprojWorkflowV1alpha1CronWorkflowSpec
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1CronWorkflowSpec {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1CronWorkflowSpec</code>.
   * CronWorkflowSpec is the specification of a CronWorkflow
   * @alias module:model/IoArgoprojWorkflowV1alpha1CronWorkflowSpec
   * @class
   * @param workflowSpec {module:model/IoArgoprojWorkflowV1alpha1WorkflowSpec} 
   */
  constructor(workflowSpec) {
    this.workflowSpec = workflowSpec;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1CronWorkflowSpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1CronWorkflowSpec} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1CronWorkflowSpec} The populated <code>IoArgoprojWorkflowV1alpha1CronWorkflowSpec</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1CronWorkflowSpec();
      if (data.hasOwnProperty('concurrencyPolicy'))
        obj.concurrencyPolicy = ApiClient.convertToType(data['concurrencyPolicy'], 'String');
      if (data.hasOwnProperty('failedJobsHistoryLimit'))
        obj.failedJobsHistoryLimit = ApiClient.convertToType(data['failedJobsHistoryLimit'], 'Number');
      if (data.hasOwnProperty('schedule'))
        obj.schedule = ApiClient.convertToType(data['schedule'], 'String');
      if (data.hasOwnProperty('schedules'))
        obj.schedules = ApiClient.convertToType(data['schedules'], ['String']);
      if (data.hasOwnProperty('startingDeadlineSeconds'))
        obj.startingDeadlineSeconds = ApiClient.convertToType(data['startingDeadlineSeconds'], 'Number');
      if (data.hasOwnProperty('stopStrategy'))
        obj.stopStrategy = IoArgoprojWorkflowV1alpha1StopStrategy.constructFromObject(data['stopStrategy']);
      if (data.hasOwnProperty('successfulJobsHistoryLimit'))
        obj.successfulJobsHistoryLimit = ApiClient.convertToType(data['successfulJobsHistoryLimit'], 'Number');
      if (data.hasOwnProperty('suspend'))
        obj.suspend = ApiClient.convertToType(data['suspend'], 'Boolean');
      if (data.hasOwnProperty('timezone'))
        obj.timezone = ApiClient.convertToType(data['timezone'], 'String');
      if (data.hasOwnProperty('when'))
        obj.when = ApiClient.convertToType(data['when'], 'String');
      if (data.hasOwnProperty('workflowMetadata'))
        obj.workflowMetadata = IoK8sApimachineryPkgApisMetaV1ObjectMeta.constructFromObject(data['workflowMetadata']);
      if (data.hasOwnProperty('workflowSpec'))
        obj.workflowSpec = IoArgoprojWorkflowV1alpha1WorkflowSpec.constructFromObject(data['workflowSpec']);
    }
    return obj;
  }
}

/**
 * ConcurrencyPolicy is the K8s-style concurrency policy that will be used
 * @member {String} concurrencyPolicy
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.concurrencyPolicy = undefined;

/**
 * FailedJobsHistoryLimit is the number of failed jobs to be kept at a time
 * @member {Number} failedJobsHistoryLimit
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.failedJobsHistoryLimit = undefined;

/**
 * Schedule is a schedule to run the Workflow in Cron format. Deprecated, use Schedules
 * @member {String} schedule
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.schedule = undefined;

/**
 * v3.6 and after: Schedules is a list of schedules to run the Workflow in Cron format
 * @member {Array.<String>} schedules
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.schedules = undefined;

/**
 * StartingDeadlineSeconds is the K8s-style deadline that will limit the time a CronWorkflow will be run after its original scheduled time if it is missed.
 * @member {Number} startingDeadlineSeconds
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.startingDeadlineSeconds = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1StopStrategy} stopStrategy
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.stopStrategy = undefined;

/**
 * SuccessfulJobsHistoryLimit is the number of successful jobs to be kept at a time
 * @member {Number} successfulJobsHistoryLimit
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.successfulJobsHistoryLimit = undefined;

/**
 * Suspend is a flag that will stop new CronWorkflows from running if set to true
 * @member {Boolean} suspend
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.suspend = undefined;

/**
 * Timezone is the timezone against which the cron schedule will be calculated, e.g. \"Asia/Tokyo\". Default is machine's local time.
 * @member {String} timezone
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.timezone = undefined;

/**
 * v3.6 and after: When is an expression that determines if a run should be scheduled.
 * @member {String} when
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.when = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1ObjectMeta} workflowMetadata
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.workflowMetadata = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1WorkflowSpec} workflowSpec
 */
IoArgoprojWorkflowV1alpha1CronWorkflowSpec.prototype.workflowSpec = undefined;

module.exports = IoArgoprojWorkflowV1alpha1CronWorkflowSpec;
