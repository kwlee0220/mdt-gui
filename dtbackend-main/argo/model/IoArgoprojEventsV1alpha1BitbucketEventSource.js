/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1BitbucketAuth = require('./IoArgoprojEventsV1alpha1BitbucketAuth');
const IoArgoprojEventsV1alpha1BitbucketRepository = require('./IoArgoprojEventsV1alpha1BitbucketRepository');
const IoArgoprojEventsV1alpha1EventSourceFilter = require('./IoArgoprojEventsV1alpha1EventSourceFilter');
const IoArgoprojEventsV1alpha1WebhookContext = require('./IoArgoprojEventsV1alpha1WebhookContext');

/**
 * The IoArgoprojEventsV1alpha1BitbucketEventSource model module.
 * @module model/IoArgoprojEventsV1alpha1BitbucketEventSource
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1BitbucketEventSource {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1BitbucketEventSource</code>.
   * @alias module:model/IoArgoprojEventsV1alpha1BitbucketEventSource
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1BitbucketEventSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1BitbucketEventSource} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1BitbucketEventSource} The populated <code>IoArgoprojEventsV1alpha1BitbucketEventSource</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1BitbucketEventSource();
      if (data.hasOwnProperty('auth'))
        obj.auth = IoArgoprojEventsV1alpha1BitbucketAuth.constructFromObject(data['auth']);
      if (data.hasOwnProperty('deleteHookOnFinish'))
        obj.deleteHookOnFinish = ApiClient.convertToType(data['deleteHookOnFinish'], 'Boolean');
      if (data.hasOwnProperty('events'))
        obj.events = ApiClient.convertToType(data['events'], ['String']);
      if (data.hasOwnProperty('filter'))
        obj.filter = IoArgoprojEventsV1alpha1EventSourceFilter.constructFromObject(data['filter']);
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], {'String': 'String'});
      if (data.hasOwnProperty('owner'))
        obj.owner = ApiClient.convertToType(data['owner'], 'String');
      if (data.hasOwnProperty('projectKey'))
        obj.projectKey = ApiClient.convertToType(data['projectKey'], 'String');
      if (data.hasOwnProperty('repositories'))
        obj.repositories = ApiClient.convertToType(data['repositories'], [IoArgoprojEventsV1alpha1BitbucketRepository]);
      if (data.hasOwnProperty('repositorySlug'))
        obj.repositorySlug = ApiClient.convertToType(data['repositorySlug'], 'String');
      if (data.hasOwnProperty('webhook'))
        obj.webhook = IoArgoprojEventsV1alpha1WebhookContext.constructFromObject(data['webhook']);
    }
    return obj;
  }
}

/**
 * @member {module:model/IoArgoprojEventsV1alpha1BitbucketAuth} auth
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.auth = undefined;

/**
 * @member {Boolean} deleteHookOnFinish
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.deleteHookOnFinish = undefined;

/**
 * Events this webhook is subscribed to.
 * @member {Array.<String>} events
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.events = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1EventSourceFilter} filter
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.filter = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.metadata = undefined;

/**
 * @member {String} owner
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.owner = undefined;

/**
 * @member {String} projectKey
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.projectKey = undefined;

/**
 * @member {Array.<module:model/IoArgoprojEventsV1alpha1BitbucketRepository>} repositories
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.repositories = undefined;

/**
 * @member {String} repositorySlug
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.repositorySlug = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1WebhookContext} webhook
 */
IoArgoprojEventsV1alpha1BitbucketEventSource.prototype.webhook = undefined;

module.exports = IoArgoprojEventsV1alpha1BitbucketEventSource;
