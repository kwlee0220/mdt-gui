/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1PodDNSConfigOption = require('./IoK8sApiCoreV1PodDNSConfigOption');

/**
 * The IoK8sApiCoreV1PodDNSConfig model module.
 * @module model/IoK8sApiCoreV1PodDNSConfig
 * @version VERSION
 */
class IoK8sApiCoreV1PodDNSConfig {
  /**
   * Constructs a new <code>IoK8sApiCoreV1PodDNSConfig</code>.
   * PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
   * @alias module:model/IoK8sApiCoreV1PodDNSConfig
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1PodDNSConfig</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1PodDNSConfig} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1PodDNSConfig} The populated <code>IoK8sApiCoreV1PodDNSConfig</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1PodDNSConfig();
      if (data.hasOwnProperty('nameservers'))
        obj.nameservers = ApiClient.convertToType(data['nameservers'], ['String']);
      if (data.hasOwnProperty('options'))
        obj.options = ApiClient.convertToType(data['options'], [IoK8sApiCoreV1PodDNSConfigOption]);
      if (data.hasOwnProperty('searches'))
        obj.searches = ApiClient.convertToType(data['searches'], ['String']);
    }
    return obj;
  }
}

/**
 * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
 * @member {Array.<String>} nameservers
 */
IoK8sApiCoreV1PodDNSConfig.prototype.nameservers = undefined;

/**
 * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
 * @member {Array.<module:model/IoK8sApiCoreV1PodDNSConfigOption>} options
 */
IoK8sApiCoreV1PodDNSConfig.prototype.options = undefined;

/**
 * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
 * @member {Array.<String>} searches
 */
IoK8sApiCoreV1PodDNSConfig.prototype.searches = undefined;

module.exports = IoK8sApiCoreV1PodDNSConfig;
