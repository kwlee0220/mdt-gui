/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1NodeSelectorRequirement = require('./IoK8sApiCoreV1NodeSelectorRequirement');

/**
 * The IoK8sApiCoreV1NodeSelectorTerm model module.
 * @module model/IoK8sApiCoreV1NodeSelectorTerm
 * @version VERSION
 */
class IoK8sApiCoreV1NodeSelectorTerm {
  /**
   * Constructs a new <code>IoK8sApiCoreV1NodeSelectorTerm</code>.
   * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
   * @alias module:model/IoK8sApiCoreV1NodeSelectorTerm
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1NodeSelectorTerm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1NodeSelectorTerm} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1NodeSelectorTerm} The populated <code>IoK8sApiCoreV1NodeSelectorTerm</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1NodeSelectorTerm();
      if (data.hasOwnProperty('matchExpressions'))
        obj.matchExpressions = ApiClient.convertToType(data['matchExpressions'], [IoK8sApiCoreV1NodeSelectorRequirement]);
      if (data.hasOwnProperty('matchFields'))
        obj.matchFields = ApiClient.convertToType(data['matchFields'], [IoK8sApiCoreV1NodeSelectorRequirement]);
    }
    return obj;
  }
}

/**
 * A list of node selector requirements by node's labels.
 * @member {Array.<module:model/IoK8sApiCoreV1NodeSelectorRequirement>} matchExpressions
 */
IoK8sApiCoreV1NodeSelectorTerm.prototype.matchExpressions = undefined;

/**
 * A list of node selector requirements by node's fields.
 * @member {Array.<module:model/IoK8sApiCoreV1NodeSelectorRequirement>} matchFields
 */
IoK8sApiCoreV1NodeSelectorTerm.prototype.matchFields = undefined;

module.exports = IoK8sApiCoreV1NodeSelectorTerm;
