/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1HTTPBodySource = require('./IoArgoprojWorkflowV1alpha1HTTPBodySource');
const IoArgoprojWorkflowV1alpha1HTTPHeader = require('./IoArgoprojWorkflowV1alpha1HTTPHeader');

/**
 * The IoArgoprojWorkflowV1alpha1HTTP model module.
 * @module model/IoArgoprojWorkflowV1alpha1HTTP
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1HTTP {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1HTTP</code>.
   * @alias module:model/IoArgoprojWorkflowV1alpha1HTTP
   * @class
   * @param url {String} URL of the HTTP Request
   */
  constructor(url) {
    this.url = url;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1HTTP</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1HTTP} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1HTTP} The populated <code>IoArgoprojWorkflowV1alpha1HTTP</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1HTTP();
      if (data.hasOwnProperty('body'))
        obj.body = ApiClient.convertToType(data['body'], 'String');
      if (data.hasOwnProperty('bodyFrom'))
        obj.bodyFrom = IoArgoprojWorkflowV1alpha1HTTPBodySource.constructFromObject(data['bodyFrom']);
      if (data.hasOwnProperty('headers'))
        obj.headers = ApiClient.convertToType(data['headers'], [IoArgoprojWorkflowV1alpha1HTTPHeader]);
      if (data.hasOwnProperty('insecureSkipVerify'))
        obj.insecureSkipVerify = ApiClient.convertToType(data['insecureSkipVerify'], 'Boolean');
      if (data.hasOwnProperty('method'))
        obj.method = ApiClient.convertToType(data['method'], 'String');
      if (data.hasOwnProperty('successCondition'))
        obj.successCondition = ApiClient.convertToType(data['successCondition'], 'String');
      if (data.hasOwnProperty('timeoutSeconds'))
        obj.timeoutSeconds = ApiClient.convertToType(data['timeoutSeconds'], 'Number');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
    }
    return obj;
  }
}

/**
 * Body is content of the HTTP Request
 * @member {String} body
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.body = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1HTTPBodySource} bodyFrom
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.bodyFrom = undefined;

/**
 * Headers are an optional list of headers to send with HTTP requests
 * @member {Array.<module:model/IoArgoprojWorkflowV1alpha1HTTPHeader>} headers
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.headers = undefined;

/**
 * InsecureSkipVerify is a bool when if set to true will skip TLS verification for the HTTP client
 * @member {Boolean} insecureSkipVerify
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.insecureSkipVerify = undefined;

/**
 * Method is HTTP methods for HTTP Request
 * @member {String} method
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.method = undefined;

/**
 * SuccessCondition is an expression if evaluated to true is considered successful
 * @member {String} successCondition
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.successCondition = undefined;

/**
 * TimeoutSeconds is request timeout for HTTP Request. Default is 30 seconds
 * @member {Number} timeoutSeconds
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.timeoutSeconds = undefined;

/**
 * URL of the HTTP Request
 * @member {String} url
 */
IoArgoprojWorkflowV1alpha1HTTP.prototype.url = undefined;

module.exports = IoArgoprojWorkflowV1alpha1HTTP;
