/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApimachineryPkgApisMetaV1OwnerReference = require('./IoK8sApimachineryPkgApisMetaV1OwnerReference');

/**
 * The IoArgoprojWorkflowV1alpha1SubmitOpts model module.
 * @module model/IoArgoprojWorkflowV1alpha1SubmitOpts
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1SubmitOpts {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1SubmitOpts</code>.
   * SubmitOpts are workflow submission options
   * @alias module:model/IoArgoprojWorkflowV1alpha1SubmitOpts
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1SubmitOpts</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1SubmitOpts} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1SubmitOpts} The populated <code>IoArgoprojWorkflowV1alpha1SubmitOpts</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1SubmitOpts();
      if (data.hasOwnProperty('annotations'))
        obj.annotations = ApiClient.convertToType(data['annotations'], 'String');
      if (data.hasOwnProperty('dryRun'))
        obj.dryRun = ApiClient.convertToType(data['dryRun'], 'Boolean');
      if (data.hasOwnProperty('entryPoint'))
        obj.entryPoint = ApiClient.convertToType(data['entryPoint'], 'String');
      if (data.hasOwnProperty('generateName'))
        obj.generateName = ApiClient.convertToType(data['generateName'], 'String');
      if (data.hasOwnProperty('labels'))
        obj.labels = ApiClient.convertToType(data['labels'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('ownerReference'))
        obj.ownerReference = IoK8sApimachineryPkgApisMetaV1OwnerReference.constructFromObject(data['ownerReference']);
      if (data.hasOwnProperty('parameters'))
        obj.parameters = ApiClient.convertToType(data['parameters'], ['String']);
      if (data.hasOwnProperty('podPriorityClassName'))
        obj.podPriorityClassName = ApiClient.convertToType(data['podPriorityClassName'], 'String');
      if (data.hasOwnProperty('priority'))
        obj.priority = ApiClient.convertToType(data['priority'], 'Number');
      if (data.hasOwnProperty('serverDryRun'))
        obj.serverDryRun = ApiClient.convertToType(data['serverDryRun'], 'Boolean');
      if (data.hasOwnProperty('serviceAccount'))
        obj.serviceAccount = ApiClient.convertToType(data['serviceAccount'], 'String');
    }
    return obj;
  }
}

/**
 * Annotations adds to metadata.labels
 * @member {String} annotations
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.annotations = undefined;

/**
 * DryRun validates the workflow on the client-side without creating it. This option is not supported in API
 * @member {Boolean} dryRun
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.dryRun = undefined;

/**
 * Entrypoint overrides spec.entrypoint
 * @member {String} entryPoint
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.entryPoint = undefined;

/**
 * GenerateName overrides metadata.generateName
 * @member {String} generateName
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.generateName = undefined;

/**
 * Labels adds to metadata.labels
 * @member {String} labels
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.labels = undefined;

/**
 * Name overrides metadata.name
 * @member {String} name
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.name = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1OwnerReference} ownerReference
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.ownerReference = undefined;

/**
 * Parameters passes input parameters to workflow
 * @member {Array.<String>} parameters
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.parameters = undefined;

/**
 * Set the podPriorityClassName of the workflow
 * @member {String} podPriorityClassName
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.podPriorityClassName = undefined;

/**
 * Priority is used if controller is configured to process limited number of workflows in parallel, higher priority workflows are processed first.
 * @member {Number} priority
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.priority = undefined;

/**
 * ServerDryRun validates the workflow on the server-side without creating it
 * @member {Boolean} serverDryRun
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.serverDryRun = undefined;

/**
 * ServiceAccount runs all pods in the workflow using specified ServiceAccount.
 * @member {String} serviceAccount
 */
IoArgoprojWorkflowV1alpha1SubmitOpts.prototype.serviceAccount = undefined;

module.exports = IoArgoprojWorkflowV1alpha1SubmitOpts;
