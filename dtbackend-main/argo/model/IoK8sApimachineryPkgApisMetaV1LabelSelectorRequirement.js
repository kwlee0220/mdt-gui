/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement model module.
 * @module model/IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
 * @version VERSION
 */
class IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement {
  /**
   * Constructs a new <code>IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement</code>.
   * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
   * @alias module:model/IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement
   * @class
   * @param key {String} key is the label key that the selector applies to.
   * @param operator {String} operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   */
  constructor(key, operator) {
    this.key = key;
    this.operator = operator;
  }

  /**
   * Constructs a <code>IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement} obj Optional instance to populate.
   * @return {module:model/IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement} The populated <code>IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement();
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
      if (data.hasOwnProperty('operator'))
        obj.operator = ApiClient.convertToType(data['operator'], 'String');
      if (data.hasOwnProperty('values'))
        obj.values = ApiClient.convertToType(data['values'], ['String']);
    }
    return obj;
  }
}

/**
 * key is the label key that the selector applies to.
 * @member {String} key
 */
IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement.prototype.key = undefined;

/**
 * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
 * @member {String} operator
 */
IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement.prototype.operator = undefined;

/**
 * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
 * @member {Array.<String>} values
 */
IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement.prototype.values = undefined;

module.exports = IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement;
