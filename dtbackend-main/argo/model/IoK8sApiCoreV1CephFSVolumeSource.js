/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1LocalObjectReference = require('./IoK8sApiCoreV1LocalObjectReference');

/**
 * The IoK8sApiCoreV1CephFSVolumeSource model module.
 * @module model/IoK8sApiCoreV1CephFSVolumeSource
 * @version VERSION
 */
class IoK8sApiCoreV1CephFSVolumeSource {
  /**
   * Constructs a new <code>IoK8sApiCoreV1CephFSVolumeSource</code>.
   * Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
   * @alias module:model/IoK8sApiCoreV1CephFSVolumeSource
   * @class
   * @param monitors {Array.<String>} monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
   */
  constructor(monitors) {
    this.monitors = monitors;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1CephFSVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1CephFSVolumeSource} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1CephFSVolumeSource} The populated <code>IoK8sApiCoreV1CephFSVolumeSource</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1CephFSVolumeSource();
      if (data.hasOwnProperty('monitors'))
        obj.monitors = ApiClient.convertToType(data['monitors'], ['String']);
      if (data.hasOwnProperty('path'))
        obj.path = ApiClient.convertToType(data['path'], 'String');
      if (data.hasOwnProperty('readOnly'))
        obj.readOnly = ApiClient.convertToType(data['readOnly'], 'Boolean');
      if (data.hasOwnProperty('secretFile'))
        obj.secretFile = ApiClient.convertToType(data['secretFile'], 'String');
      if (data.hasOwnProperty('secretRef'))
        obj.secretRef = IoK8sApiCoreV1LocalObjectReference.constructFromObject(data['secretRef']);
      if (data.hasOwnProperty('user'))
        obj.user = ApiClient.convertToType(data['user'], 'String');
    }
    return obj;
  }
}

/**
 * monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
 * @member {Array.<String>} monitors
 */
IoK8sApiCoreV1CephFSVolumeSource.prototype.monitors = undefined;

/**
 * path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
 * @member {String} path
 */
IoK8sApiCoreV1CephFSVolumeSource.prototype.path = undefined;

/**
 * readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
 * @member {Boolean} readOnly
 */
IoK8sApiCoreV1CephFSVolumeSource.prototype.readOnly = undefined;

/**
 * secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
 * @member {String} secretFile
 */
IoK8sApiCoreV1CephFSVolumeSource.prototype.secretFile = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1LocalObjectReference} secretRef
 */
IoK8sApiCoreV1CephFSVolumeSource.prototype.secretRef = undefined;

/**
 * user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
 * @member {String} user
 */
IoK8sApiCoreV1CephFSVolumeSource.prototype.user = undefined;

module.exports = IoK8sApiCoreV1CephFSVolumeSource;
