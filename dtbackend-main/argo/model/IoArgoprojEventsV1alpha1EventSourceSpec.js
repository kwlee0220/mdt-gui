/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1AMQPEventSource = require('./IoArgoprojEventsV1alpha1AMQPEventSource');
const IoArgoprojEventsV1alpha1AzureEventsHubEventSource = require('./IoArgoprojEventsV1alpha1AzureEventsHubEventSource');
const IoArgoprojEventsV1alpha1AzureQueueStorageEventSource = require('./IoArgoprojEventsV1alpha1AzureQueueStorageEventSource');
const IoArgoprojEventsV1alpha1AzureServiceBusEventSource = require('./IoArgoprojEventsV1alpha1AzureServiceBusEventSource');
const IoArgoprojEventsV1alpha1BitbucketEventSource = require('./IoArgoprojEventsV1alpha1BitbucketEventSource');
const IoArgoprojEventsV1alpha1BitbucketServerEventSource = require('./IoArgoprojEventsV1alpha1BitbucketServerEventSource');
const IoArgoprojEventsV1alpha1CalendarEventSource = require('./IoArgoprojEventsV1alpha1CalendarEventSource');
const IoArgoprojEventsV1alpha1EmitterEventSource = require('./IoArgoprojEventsV1alpha1EmitterEventSource');
const IoArgoprojEventsV1alpha1FileEventSource = require('./IoArgoprojEventsV1alpha1FileEventSource');
const IoArgoprojEventsV1alpha1GenericEventSource = require('./IoArgoprojEventsV1alpha1GenericEventSource');
const IoArgoprojEventsV1alpha1GerritEventSource = require('./IoArgoprojEventsV1alpha1GerritEventSource');
const IoArgoprojEventsV1alpha1GithubEventSource = require('./IoArgoprojEventsV1alpha1GithubEventSource');
const IoArgoprojEventsV1alpha1GitlabEventSource = require('./IoArgoprojEventsV1alpha1GitlabEventSource');
const IoArgoprojEventsV1alpha1HDFSEventSource = require('./IoArgoprojEventsV1alpha1HDFSEventSource');
const IoArgoprojEventsV1alpha1KafkaEventSource = require('./IoArgoprojEventsV1alpha1KafkaEventSource');
const IoArgoprojEventsV1alpha1MQTTEventSource = require('./IoArgoprojEventsV1alpha1MQTTEventSource');
const IoArgoprojEventsV1alpha1NATSEventsSource = require('./IoArgoprojEventsV1alpha1NATSEventsSource');
const IoArgoprojEventsV1alpha1NSQEventSource = require('./IoArgoprojEventsV1alpha1NSQEventSource');
const IoArgoprojEventsV1alpha1PubSubEventSource = require('./IoArgoprojEventsV1alpha1PubSubEventSource');
const IoArgoprojEventsV1alpha1PulsarEventSource = require('./IoArgoprojEventsV1alpha1PulsarEventSource');
const IoArgoprojEventsV1alpha1RedisEventSource = require('./IoArgoprojEventsV1alpha1RedisEventSource');
const IoArgoprojEventsV1alpha1RedisStreamEventSource = require('./IoArgoprojEventsV1alpha1RedisStreamEventSource');
const IoArgoprojEventsV1alpha1ResourceEventSource = require('./IoArgoprojEventsV1alpha1ResourceEventSource');
const IoArgoprojEventsV1alpha1S3Artifact = require('./IoArgoprojEventsV1alpha1S3Artifact');
const IoArgoprojEventsV1alpha1SFTPEventSource = require('./IoArgoprojEventsV1alpha1SFTPEventSource');
const IoArgoprojEventsV1alpha1SNSEventSource = require('./IoArgoprojEventsV1alpha1SNSEventSource');
const IoArgoprojEventsV1alpha1SQSEventSource = require('./IoArgoprojEventsV1alpha1SQSEventSource');
const IoArgoprojEventsV1alpha1Service = require('./IoArgoprojEventsV1alpha1Service');
const IoArgoprojEventsV1alpha1SlackEventSource = require('./IoArgoprojEventsV1alpha1SlackEventSource');
const IoArgoprojEventsV1alpha1StorageGridEventSource = require('./IoArgoprojEventsV1alpha1StorageGridEventSource');
const IoArgoprojEventsV1alpha1StripeEventSource = require('./IoArgoprojEventsV1alpha1StripeEventSource');
const IoArgoprojEventsV1alpha1Template = require('./IoArgoprojEventsV1alpha1Template');
const IoArgoprojEventsV1alpha1WebhookEventSource = require('./IoArgoprojEventsV1alpha1WebhookEventSource');

/**
 * The IoArgoprojEventsV1alpha1EventSourceSpec model module.
 * @module model/IoArgoprojEventsV1alpha1EventSourceSpec
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1EventSourceSpec {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1EventSourceSpec</code>.
   * @alias module:model/IoArgoprojEventsV1alpha1EventSourceSpec
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1EventSourceSpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1EventSourceSpec} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1EventSourceSpec} The populated <code>IoArgoprojEventsV1alpha1EventSourceSpec</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1EventSourceSpec();
      if (data.hasOwnProperty('amqp'))
        obj.amqp = ApiClient.convertToType(data['amqp'], {'String': IoArgoprojEventsV1alpha1AMQPEventSource});
      if (data.hasOwnProperty('azureEventsHub'))
        obj.azureEventsHub = ApiClient.convertToType(data['azureEventsHub'], {'String': IoArgoprojEventsV1alpha1AzureEventsHubEventSource});
      if (data.hasOwnProperty('azureQueueStorage'))
        obj.azureQueueStorage = ApiClient.convertToType(data['azureQueueStorage'], {'String': IoArgoprojEventsV1alpha1AzureQueueStorageEventSource});
      if (data.hasOwnProperty('azureServiceBus'))
        obj.azureServiceBus = ApiClient.convertToType(data['azureServiceBus'], {'String': IoArgoprojEventsV1alpha1AzureServiceBusEventSource});
      if (data.hasOwnProperty('bitbucket'))
        obj.bitbucket = ApiClient.convertToType(data['bitbucket'], {'String': IoArgoprojEventsV1alpha1BitbucketEventSource});
      if (data.hasOwnProperty('bitbucketserver'))
        obj.bitbucketserver = ApiClient.convertToType(data['bitbucketserver'], {'String': IoArgoprojEventsV1alpha1BitbucketServerEventSource});
      if (data.hasOwnProperty('calendar'))
        obj.calendar = ApiClient.convertToType(data['calendar'], {'String': IoArgoprojEventsV1alpha1CalendarEventSource});
      if (data.hasOwnProperty('emitter'))
        obj.emitter = ApiClient.convertToType(data['emitter'], {'String': IoArgoprojEventsV1alpha1EmitterEventSource});
      if (data.hasOwnProperty('eventBusName'))
        obj.eventBusName = ApiClient.convertToType(data['eventBusName'], 'String');
      if (data.hasOwnProperty('file'))
        obj.file = ApiClient.convertToType(data['file'], {'String': IoArgoprojEventsV1alpha1FileEventSource});
      if (data.hasOwnProperty('generic'))
        obj.generic = ApiClient.convertToType(data['generic'], {'String': IoArgoprojEventsV1alpha1GenericEventSource});
      if (data.hasOwnProperty('gerrit'))
        obj.gerrit = ApiClient.convertToType(data['gerrit'], {'String': IoArgoprojEventsV1alpha1GerritEventSource});
      if (data.hasOwnProperty('github'))
        obj.github = ApiClient.convertToType(data['github'], {'String': IoArgoprojEventsV1alpha1GithubEventSource});
      if (data.hasOwnProperty('gitlab'))
        obj.gitlab = ApiClient.convertToType(data['gitlab'], {'String': IoArgoprojEventsV1alpha1GitlabEventSource});
      if (data.hasOwnProperty('hdfs'))
        obj.hdfs = ApiClient.convertToType(data['hdfs'], {'String': IoArgoprojEventsV1alpha1HDFSEventSource});
      if (data.hasOwnProperty('kafka'))
        obj.kafka = ApiClient.convertToType(data['kafka'], {'String': IoArgoprojEventsV1alpha1KafkaEventSource});
      if (data.hasOwnProperty('minio'))
        obj.minio = ApiClient.convertToType(data['minio'], {'String': IoArgoprojEventsV1alpha1S3Artifact});
      if (data.hasOwnProperty('mqtt'))
        obj.mqtt = ApiClient.convertToType(data['mqtt'], {'String': IoArgoprojEventsV1alpha1MQTTEventSource});
      if (data.hasOwnProperty('nats'))
        obj.nats = ApiClient.convertToType(data['nats'], {'String': IoArgoprojEventsV1alpha1NATSEventsSource});
      if (data.hasOwnProperty('nsq'))
        obj.nsq = ApiClient.convertToType(data['nsq'], {'String': IoArgoprojEventsV1alpha1NSQEventSource});
      if (data.hasOwnProperty('pubSub'))
        obj.pubSub = ApiClient.convertToType(data['pubSub'], {'String': IoArgoprojEventsV1alpha1PubSubEventSource});
      if (data.hasOwnProperty('pulsar'))
        obj.pulsar = ApiClient.convertToType(data['pulsar'], {'String': IoArgoprojEventsV1alpha1PulsarEventSource});
      if (data.hasOwnProperty('redis'))
        obj.redis = ApiClient.convertToType(data['redis'], {'String': IoArgoprojEventsV1alpha1RedisEventSource});
      if (data.hasOwnProperty('redisStream'))
        obj.redisStream = ApiClient.convertToType(data['redisStream'], {'String': IoArgoprojEventsV1alpha1RedisStreamEventSource});
      if (data.hasOwnProperty('replicas'))
        obj.replicas = ApiClient.convertToType(data['replicas'], 'Number');
      if (data.hasOwnProperty('resource'))
        obj.resource = ApiClient.convertToType(data['resource'], {'String': IoArgoprojEventsV1alpha1ResourceEventSource});
      if (data.hasOwnProperty('service'))
        obj.service = IoArgoprojEventsV1alpha1Service.constructFromObject(data['service']);
      if (data.hasOwnProperty('sftp'))
        obj.sftp = ApiClient.convertToType(data['sftp'], {'String': IoArgoprojEventsV1alpha1SFTPEventSource});
      if (data.hasOwnProperty('slack'))
        obj.slack = ApiClient.convertToType(data['slack'], {'String': IoArgoprojEventsV1alpha1SlackEventSource});
      if (data.hasOwnProperty('sns'))
        obj.sns = ApiClient.convertToType(data['sns'], {'String': IoArgoprojEventsV1alpha1SNSEventSource});
      if (data.hasOwnProperty('sqs'))
        obj.sqs = ApiClient.convertToType(data['sqs'], {'String': IoArgoprojEventsV1alpha1SQSEventSource});
      if (data.hasOwnProperty('storageGrid'))
        obj.storageGrid = ApiClient.convertToType(data['storageGrid'], {'String': IoArgoprojEventsV1alpha1StorageGridEventSource});
      if (data.hasOwnProperty('stripe'))
        obj.stripe = ApiClient.convertToType(data['stripe'], {'String': IoArgoprojEventsV1alpha1StripeEventSource});
      if (data.hasOwnProperty('template'))
        obj.template = IoArgoprojEventsV1alpha1Template.constructFromObject(data['template']);
      if (data.hasOwnProperty('webhook'))
        obj.webhook = ApiClient.convertToType(data['webhook'], {'String': IoArgoprojEventsV1alpha1WebhookEventSource});
    }
    return obj;
  }
}

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1AMQPEventSource>} amqp
 */
module.exports.amqp = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1AzureEventsHubEventSource>} azureEventsHub
 */
module.exports.azureEventsHub = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1AzureQueueStorageEventSource>} azureQueueStorage
 */
module.exports.azureQueueStorage = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1AzureServiceBusEventSource>} azureServiceBus
 */
module.exports.azureServiceBus = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1BitbucketEventSource>} bitbucket
 */
module.exports.bitbucket = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1BitbucketServerEventSource>} bitbucketserver
 */
module.exports.bitbucketserver = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1CalendarEventSource>} calendar
 */
module.exports.calendar = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1EmitterEventSource>} emitter
 */
module.exports.emitter = undefined;

/**
 * @member {String} eventBusName
 */
module.exports.eventBusName = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1FileEventSource>} file
 */
module.exports.file = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1GenericEventSource>} generic
 */
module.exports.generic = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1GerritEventSource>} gerrit
 */
module.exports.gerrit = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1GithubEventSource>} github
 */
module.exports.github = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1GitlabEventSource>} gitlab
 */
module.exports.gitlab = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1HDFSEventSource>} hdfs
 */
module.exports.hdfs = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1KafkaEventSource>} kafka
 */
module.exports.kafka = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1S3Artifact>} minio
 */
module.exports.minio = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1MQTTEventSource>} mqtt
 */
module.exports.mqtt = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1NATSEventsSource>} nats
 */
module.exports.nats = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1NSQEventSource>} nsq
 */
module.exports.nsq = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1PubSubEventSource>} pubSub
 */
module.exports.pubSub = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1PulsarEventSource>} pulsar
 */
module.exports.pulsar = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1RedisEventSource>} redis
 */
module.exports.redis = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1RedisStreamEventSource>} redisStream
 */
module.exports.redisStream = undefined;

/**
 * @member {Number} replicas
 */
module.exports.replicas = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1ResourceEventSource>} resource
 */
module.exports.resource = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1Service} service
 */
module.exports.service = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1SFTPEventSource>} sftp
 */
module.exports.sftp = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1SlackEventSource>} slack
 */
module.exports.slack = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1SNSEventSource>} sns
 */
module.exports.sns = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1SQSEventSource>} sqs
 */
module.exports.sqs = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1StorageGridEventSource>} storageGrid
 */
module.exports.storageGrid = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1StripeEventSource>} stripe
 */
module.exports.stripe = undefined;

/**
 * @member {module:model/IoArgoprojEventsV1alpha1Template} template
 */
IoArgoprojEventsV1alpha1EventSourceSpec.prototype.template = undefined;

/**
 * @member {Object.<String, module:model/IoArgoprojEventsV1alpha1WebhookEventSource>} webhook
 */
IoArgoprojEventsV1alpha1EventSourceSpec.prototype.webhook = undefined;

module.exports = IoArgoprojEventsV1alpha1EventSourceSpec;
