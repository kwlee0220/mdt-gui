/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojEventsV1alpha1EventSource = require('./IoArgoprojEventsV1alpha1EventSource');

/**
 * The EventsourceCreateEventSourceRequest model module.
 * @module model/EventsourceCreateEventSourceRequest
 * @version VERSION
 */
class EventsourceCreateEventSourceRequest {
  /**
   * Constructs a new <code>EventsourceCreateEventSourceRequest</code>.
   * @alias module:model/EventsourceCreateEventSourceRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>EventsourceCreateEventSourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EventsourceCreateEventSourceRequest} obj Optional instance to populate.
   * @return {module:model/EventsourceCreateEventSourceRequest} The populated <code>EventsourceCreateEventSourceRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EventsourceCreateEventSourceRequest();
      if (data.hasOwnProperty('eventSource'))
        obj.eventSource = IoArgoprojEventsV1alpha1EventSource.constructFromObject(data['eventSource']);
      if (data.hasOwnProperty('namespace'))
        obj.namespace = ApiClient.convertToType(data['namespace'], 'String');
    }
    return obj;
  }
}

/**
 * @member {module:model/IoArgoprojEventsV1alpha1EventSource} eventSource
 */
EventsourceCreateEventSourceRequest.prototype.eventSource = undefined;

/**
 * @member {String} namespace
 */
EventsourceCreateEventSourceRequest.prototype.namespace = undefined;

module.exports = EventsourceCreateEventSourceRequest;
