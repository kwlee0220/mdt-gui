/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');

/**
 * The IoArgoprojWorkflowV1alpha1MemoizationStatus model module.
 * @module model/IoArgoprojWorkflowV1alpha1MemoizationStatus
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1MemoizationStatus {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1MemoizationStatus</code>.
   * MemoizationStatus is the status of this memoized node
   * @alias module:model/IoArgoprojWorkflowV1alpha1MemoizationStatus
   * @class
   * @param cacheName {String} Cache is the name of the cache that was used
   * @param hit {Boolean} Hit indicates whether this node was created from a cache entry
   * @param key {String} Key is the name of the key used for this node's cache
   */
  constructor(cacheName, hit, key) {
    this.cacheName = cacheName;
    this.hit = hit;
    this.key = key;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1MemoizationStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1MemoizationStatus} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1MemoizationStatus} The populated <code>IoArgoprojWorkflowV1alpha1MemoizationStatus</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1MemoizationStatus();
      if (data.hasOwnProperty('cacheName'))
        obj.cacheName = ApiClient.convertToType(data['cacheName'], 'String');
      if (data.hasOwnProperty('hit'))
        obj.hit = ApiClient.convertToType(data['hit'], 'Boolean');
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
    }
    return obj;
  }
}

/**
 * Cache is the name of the cache that was used
 * @member {String} cacheName
 */
IoArgoprojWorkflowV1alpha1MemoizationStatus.prototype.cacheName = undefined;

/**
 * Hit indicates whether this node was created from a cache entry
 * @member {Boolean} hit
 */
IoArgoprojWorkflowV1alpha1MemoizationStatus.prototype.hit = undefined;

/**
 * Key is the name of the key used for this node's cache
 * @member {String} key
 */
IoArgoprojWorkflowV1alpha1MemoizationStatus.prototype.key = undefined;

module.exports = IoArgoprojWorkflowV1alpha1MemoizationStatus;
