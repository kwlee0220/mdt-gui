/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApimachineryPkgApisMetaV1Time = require('./IoK8sApimachineryPkgApisMetaV1Time');

/**
 * The IoArgoprojEventsV1alpha1EventContext model module.
 * @module model/IoArgoprojEventsV1alpha1EventContext
 * @version VERSION
 */
class IoArgoprojEventsV1alpha1EventContext {
  /**
   * Constructs a new <code>IoArgoprojEventsV1alpha1EventContext</code>.
   * @alias module:model/IoArgoprojEventsV1alpha1EventContext
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojEventsV1alpha1EventContext</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojEventsV1alpha1EventContext} obj Optional instance to populate.
   * @return {module:model/IoArgoprojEventsV1alpha1EventContext} The populated <code>IoArgoprojEventsV1alpha1EventContext</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojEventsV1alpha1EventContext();
      if (data.hasOwnProperty('datacontenttype'))
        obj.datacontenttype = ApiClient.convertToType(data['datacontenttype'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('source'))
        obj.source = ApiClient.convertToType(data['source'], 'String');
      if (data.hasOwnProperty('specversion'))
        obj.specversion = ApiClient.convertToType(data['specversion'], 'String');
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], 'String');
      if (data.hasOwnProperty('time'))
        obj.time = IoK8sApimachineryPkgApisMetaV1Time.constructFromObject(data['time']);
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
    }
    return obj;
  }
}

/**
 * DataContentType - A MIME (RFC2046) string describing the media type of `data`.
 * @member {String} datacontenttype
 */
IoArgoprojEventsV1alpha1EventContext.prototype.datacontenttype = undefined;

/**
 * ID of the event; must be non-empty and unique within the scope of the producer.
 * @member {String} id
 */
IoArgoprojEventsV1alpha1EventContext.prototype.id = undefined;

/**
 * Source - A URI describing the event producer.
 * @member {String} source
 */
IoArgoprojEventsV1alpha1EventContext.prototype.source = undefined;

/**
 * SpecVersion - The version of the CloudEvents specification used by the io.argoproj.workflow.v1alpha1.
 * @member {String} specversion
 */
IoArgoprojEventsV1alpha1EventContext.prototype.specversion = undefined;

/**
 * @member {String} subject
 */
IoArgoprojEventsV1alpha1EventContext.prototype.subject = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1Time} time
 */
IoArgoprojEventsV1alpha1EventContext.prototype.time = undefined;

/**
 * Type - The type of the occurrence which has happened.
 * @member {String} type
 */
IoArgoprojEventsV1alpha1EventContext.prototype.type = undefined;

module.exports = IoArgoprojEventsV1alpha1EventContext;
