/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1DAGTask = require('./IoArgoprojWorkflowV1alpha1DAGTask');

/**
 * The IoArgoprojWorkflowV1alpha1DAGTemplate model module.
 * @module model/IoArgoprojWorkflowV1alpha1DAGTemplate
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1DAGTemplate {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1DAGTemplate</code>.
   * DAGTemplate is a template subtype for directed acyclic graph templates
   * @alias module:model/IoArgoprojWorkflowV1alpha1DAGTemplate
   * @class
   * @param tasks {Array.<module:model/IoArgoprojWorkflowV1alpha1DAGTask>} Tasks are a list of DAG tasks
   */
  constructor(tasks) {
    this.tasks = tasks;
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1DAGTemplate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1DAGTemplate} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1DAGTemplate} The populated <code>IoArgoprojWorkflowV1alpha1DAGTemplate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1DAGTemplate();
      if (data.hasOwnProperty('failFast'))
        obj.failFast = ApiClient.convertToType(data['failFast'], 'Boolean');
      if (data.hasOwnProperty('target'))
        obj.target = ApiClient.convertToType(data['target'], 'String');
      if (data.hasOwnProperty('tasks'))
        obj.tasks = ApiClient.convertToType(data['tasks'], [IoArgoprojWorkflowV1alpha1DAGTask]);
    }
    return obj;
  }
}

/**
 * This flag is for DAG logic. The DAG logic has a built-in \"fail fast\" feature to stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Then it waits until all DAG nodes are completed before failing the DAG itself. The FailFast flag default is true,  if set to false, it will allow a DAG to run all branches of the DAG to completion (either success or failure), regardless of the failed outcomes of branches in the DAG. More info and example about this feature at https://github.com/argoproj/argo-workflows/issues/1442
 * @member {Boolean} failFast
 */
IoArgoprojWorkflowV1alpha1DAGTemplate.prototype.failFast = undefined;

/**
 * Target are one or more names of targets to execute in a DAG
 * @member {String} target
 */
IoArgoprojWorkflowV1alpha1DAGTemplate.prototype.target = undefined;

/**
 * Tasks are a list of DAG tasks
 * @member {Array.<module:model/IoArgoprojWorkflowV1alpha1DAGTask>} tasks
 */
IoArgoprojWorkflowV1alpha1DAGTemplate.prototype.tasks = undefined;

module.exports = IoArgoprojWorkflowV1alpha1DAGTemplate;
