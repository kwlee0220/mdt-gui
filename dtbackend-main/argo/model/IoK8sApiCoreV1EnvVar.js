/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1EnvVarSource = require('./IoK8sApiCoreV1EnvVarSource');

/**
 * The IoK8sApiCoreV1EnvVar model module.
 * @module model/IoK8sApiCoreV1EnvVar
 * @version VERSION
 */
class IoK8sApiCoreV1EnvVar {
  /**
   * Constructs a new <code>IoK8sApiCoreV1EnvVar</code>.
   * EnvVar represents an environment variable present in a Container.
   * @alias module:model/IoK8sApiCoreV1EnvVar
   * @class
   * @param name {String} Name of the environment variable. Must be a C_IDENTIFIER.
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1EnvVar</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1EnvVar} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1EnvVar} The populated <code>IoK8sApiCoreV1EnvVar</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1EnvVar();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'String');
      if (data.hasOwnProperty('valueFrom'))
        obj.valueFrom = IoK8sApiCoreV1EnvVarSource.constructFromObject(data['valueFrom']);
    }
    return obj;
  }
}

/**
 * Name of the environment variable. Must be a C_IDENTIFIER.
 * @member {String} name
 */
IoK8sApiCoreV1EnvVar.prototype.name = undefined;

/**
 * Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".
 * @member {String} value
 */
IoK8sApiCoreV1EnvVar.prototype.value = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1EnvVarSource} valueFrom
 */
IoK8sApiCoreV1EnvVar.prototype.valueFrom = undefined;

module.exports = IoK8sApiCoreV1EnvVar;
