/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1KeyToPath = require('./IoK8sApiCoreV1KeyToPath');

/**
 * The IoK8sApiCoreV1ConfigMapProjection model module.
 * @module model/IoK8sApiCoreV1ConfigMapProjection
 * @version VERSION
 */
class IoK8sApiCoreV1ConfigMapProjection {
  /**
   * Constructs a new <code>IoK8sApiCoreV1ConfigMapProjection</code>.
   * Adapts a ConfigMap into a projected volume.  The contents of the target ConfigMap&#x27;s Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
   * @alias module:model/IoK8sApiCoreV1ConfigMapProjection
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1ConfigMapProjection</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1ConfigMapProjection} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1ConfigMapProjection} The populated <code>IoK8sApiCoreV1ConfigMapProjection</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1ConfigMapProjection();
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [IoK8sApiCoreV1KeyToPath]);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('optional'))
        obj.optional = ApiClient.convertToType(data['optional'], 'Boolean');
    }
    return obj;
  }
}

/**
 * items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
 * @member {Array.<module:model/IoK8sApiCoreV1KeyToPath>} items
 */
IoK8sApiCoreV1ConfigMapProjection.prototype.items = undefined;

/**
 * Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
 * @member {String} name
 */
IoK8sApiCoreV1ConfigMapProjection.prototype.name = undefined;

/**
 * optional specify whether the ConfigMap or its keys must be defined
 * @member {Boolean} optional
 */
IoK8sApiCoreV1ConfigMapProjection.prototype.optional = undefined;

module.exports = IoK8sApiCoreV1ConfigMapProjection;
