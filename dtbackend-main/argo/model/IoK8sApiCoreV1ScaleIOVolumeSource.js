/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1LocalObjectReference = require('./IoK8sApiCoreV1LocalObjectReference');

/**
 * The IoK8sApiCoreV1ScaleIOVolumeSource model module.
 * @module model/IoK8sApiCoreV1ScaleIOVolumeSource
 * @version VERSION
 */
class IoK8sApiCoreV1ScaleIOVolumeSource {
  /**
   * Constructs a new <code>IoK8sApiCoreV1ScaleIOVolumeSource</code>.
   * ScaleIOVolumeSource represents a persistent ScaleIO volume
   * @alias module:model/IoK8sApiCoreV1ScaleIOVolumeSource
   * @class
   * @param gateway {String} gateway is the host address of the ScaleIO API Gateway.
   * @param secretRef {module:model/IoK8sApiCoreV1LocalObjectReference} 
   * @param system {String} system is the name of the storage system as configured in ScaleIO.
   */
  constructor(gateway, secretRef, system) {
    this.gateway = gateway;
    this.secretRef = secretRef;
    this.system = system;
  }

  /**
   * Constructs a <code>IoK8sApiCoreV1ScaleIOVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApiCoreV1ScaleIOVolumeSource} obj Optional instance to populate.
   * @return {module:model/IoK8sApiCoreV1ScaleIOVolumeSource} The populated <code>IoK8sApiCoreV1ScaleIOVolumeSource</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApiCoreV1ScaleIOVolumeSource();
      if (data.hasOwnProperty('fsType'))
        obj.fsType = ApiClient.convertToType(data['fsType'], 'String');
      if (data.hasOwnProperty('gateway'))
        obj.gateway = ApiClient.convertToType(data['gateway'], 'String');
      if (data.hasOwnProperty('protectionDomain'))
        obj.protectionDomain = ApiClient.convertToType(data['protectionDomain'], 'String');
      if (data.hasOwnProperty('readOnly'))
        obj.readOnly = ApiClient.convertToType(data['readOnly'], 'Boolean');
      if (data.hasOwnProperty('secretRef'))
        obj.secretRef = IoK8sApiCoreV1LocalObjectReference.constructFromObject(data['secretRef']);
      if (data.hasOwnProperty('sslEnabled'))
        obj.sslEnabled = ApiClient.convertToType(data['sslEnabled'], 'Boolean');
      if (data.hasOwnProperty('storageMode'))
        obj.storageMode = ApiClient.convertToType(data['storageMode'], 'String');
      if (data.hasOwnProperty('storagePool'))
        obj.storagePool = ApiClient.convertToType(data['storagePool'], 'String');
      if (data.hasOwnProperty('system'))
        obj.system = ApiClient.convertToType(data['system'], 'String');
      if (data.hasOwnProperty('volumeName'))
        obj.volumeName = ApiClient.convertToType(data['volumeName'], 'String');
    }
    return obj;
  }
}

/**
 * fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".
 * @member {String} fsType
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.fsType = undefined;

/**
 * gateway is the host address of the ScaleIO API Gateway.
 * @member {String} gateway
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.gateway = undefined;

/**
 * protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
 * @member {String} protectionDomain
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.protectionDomain = undefined;

/**
 * readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
 * @member {Boolean} readOnly
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.readOnly = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1LocalObjectReference} secretRef
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.secretRef = undefined;

/**
 * sslEnabled Flag enable/disable SSL communication with Gateway, default false
 * @member {Boolean} sslEnabled
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.sslEnabled = undefined;

/**
 * storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
 * @member {String} storageMode
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.storageMode = undefined;

/**
 * storagePool is the ScaleIO Storage Pool associated with the protection domain.
 * @member {String} storagePool
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.storagePool = undefined;

/**
 * system is the name of the storage system as configured in ScaleIO.
 * @member {String} system
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.system = undefined;

/**
 * volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
 * @member {String} volumeName
 */
IoK8sApiCoreV1ScaleIOVolumeSource.prototype.volumeName = undefined;

module.exports = IoK8sApiCoreV1ScaleIOVolumeSource;
