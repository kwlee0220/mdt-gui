/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoArgoprojWorkflowV1alpha1Arguments = require('./IoArgoprojWorkflowV1alpha1Arguments');
const IoArgoprojWorkflowV1alpha1ContinueOn = require('./IoArgoprojWorkflowV1alpha1ContinueOn');
const IoArgoprojWorkflowV1alpha1Item = require('./IoArgoprojWorkflowV1alpha1Item');
const IoArgoprojWorkflowV1alpha1LifecycleHook = require('./IoArgoprojWorkflowV1alpha1LifecycleHook');
const IoArgoprojWorkflowV1alpha1Sequence = require('./IoArgoprojWorkflowV1alpha1Sequence');
const IoArgoprojWorkflowV1alpha1Template = require('./IoArgoprojWorkflowV1alpha1Template');
const IoArgoprojWorkflowV1alpha1TemplateRef = require('./IoArgoprojWorkflowV1alpha1TemplateRef');

/**
 * The IoArgoprojWorkflowV1alpha1WorkflowStep model module.
 * @module model/IoArgoprojWorkflowV1alpha1WorkflowStep
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1WorkflowStep {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1WorkflowStep</code>.
   * WorkflowStep is a reference to a template to execute in a series of step
   * @alias module:model/IoArgoprojWorkflowV1alpha1WorkflowStep
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1WorkflowStep</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1WorkflowStep} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1WorkflowStep} The populated <code>IoArgoprojWorkflowV1alpha1WorkflowStep</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1WorkflowStep();
      if (data.hasOwnProperty('arguments'))
        obj._arguments = IoArgoprojWorkflowV1alpha1Arguments.constructFromObject(data['arguments']);
      if (data.hasOwnProperty('continueOn'))
        obj.continueOn = IoArgoprojWorkflowV1alpha1ContinueOn.constructFromObject(data['continueOn']);
      if (data.hasOwnProperty('hooks'))
        obj.hooks = ApiClient.convertToType(data['hooks'], {'String': IoArgoprojWorkflowV1alpha1LifecycleHook});
      if (data.hasOwnProperty('inline'))
        obj.inline = IoArgoprojWorkflowV1alpha1Template.constructFromObject(data['inline']);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('onExit'))
        obj.onExit = ApiClient.convertToType(data['onExit'], 'String');
      if (data.hasOwnProperty('template'))
        obj.template = ApiClient.convertToType(data['template'], 'String');
      if (data.hasOwnProperty('templateRef'))
        obj.templateRef = IoArgoprojWorkflowV1alpha1TemplateRef.constructFromObject(data['templateRef']);
      if (data.hasOwnProperty('when'))
        obj.when = ApiClient.convertToType(data['when'], 'String');
      if (data.hasOwnProperty('withItems'))
        obj.withItems = ApiClient.convertToType(data['withItems'], [IoArgoprojWorkflowV1alpha1Item]);
      if (data.hasOwnProperty('withParam'))
        obj.withParam = ApiClient.convertToType(data['withParam'], 'String');
      if (data.hasOwnProperty('withSequence'))
        obj.withSequence = IoArgoprojWorkflowV1alpha1Sequence.constructFromObject(data['withSequence']);
    }
    return obj;
  }
}

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1Arguments} _arguments
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype._arguments = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1ContinueOn} continueOn
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.continueOn = undefined;

/**
 * Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step
 * @member {Object.<String, module:model/IoArgoprojWorkflowV1alpha1LifecycleHook>} hooks
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.hooks = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1Template} inline
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.inline = undefined;

/**
 * Name of the step
 * @member {String} name
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.name = undefined;

/**
 * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.
 * @member {String} onExit
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.onExit = undefined;

/**
 * Template is the name of the template to execute as the step
 * @member {String} template
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.template = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1TemplateRef} templateRef
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.templateRef = undefined;

/**
 * When is an expression in which the step should conditionally execute
 * @member {String} when
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.when = undefined;

/**
 * WithItems expands a step into multiple parallel steps from the items in the list
 * @member {Array.<module:model/IoArgoprojWorkflowV1alpha1Item>} withItems
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.withItems = undefined;

/**
 * WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
 * @member {String} withParam
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.withParam = undefined;

/**
 * @member {module:model/IoArgoprojWorkflowV1alpha1Sequence} withSequence
 */
IoArgoprojWorkflowV1alpha1WorkflowStep.prototype.withSequence = undefined;

module.exports = IoArgoprojWorkflowV1alpha1WorkflowStep;
