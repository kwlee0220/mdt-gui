/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApiCoreV1SecretKeySelector = require('./IoK8sApiCoreV1SecretKeySelector');

/**
 * The IoArgoprojWorkflowV1alpha1S3EncryptionOptions model module.
 * @module model/IoArgoprojWorkflowV1alpha1S3EncryptionOptions
 * @version VERSION
 */
class IoArgoprojWorkflowV1alpha1S3EncryptionOptions {
  /**
   * Constructs a new <code>IoArgoprojWorkflowV1alpha1S3EncryptionOptions</code>.
   * S3EncryptionOptions used to determine encryption options during s3 operations
   * @alias module:model/IoArgoprojWorkflowV1alpha1S3EncryptionOptions
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoArgoprojWorkflowV1alpha1S3EncryptionOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoArgoprojWorkflowV1alpha1S3EncryptionOptions} obj Optional instance to populate.
   * @return {module:model/IoArgoprojWorkflowV1alpha1S3EncryptionOptions} The populated <code>IoArgoprojWorkflowV1alpha1S3EncryptionOptions</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoArgoprojWorkflowV1alpha1S3EncryptionOptions();
      if (data.hasOwnProperty('enableEncryption'))
        obj.enableEncryption = ApiClient.convertToType(data['enableEncryption'], 'Boolean');
      if (data.hasOwnProperty('kmsEncryptionContext'))
        obj.kmsEncryptionContext = ApiClient.convertToType(data['kmsEncryptionContext'], 'String');
      if (data.hasOwnProperty('kmsKeyId'))
        obj.kmsKeyId = ApiClient.convertToType(data['kmsKeyId'], 'String');
      if (data.hasOwnProperty('serverSideCustomerKeySecret'))
        obj.serverSideCustomerKeySecret = IoK8sApiCoreV1SecretKeySelector.constructFromObject(data['serverSideCustomerKeySecret']);
    }
    return obj;
  }
}

/**
 * EnableEncryption tells the driver to encrypt objects if set to true. If kmsKeyId and serverSideCustomerKeySecret are not set, SSE-S3 will be used
 * @member {Boolean} enableEncryption
 */
IoArgoprojWorkflowV1alpha1S3EncryptionOptions.prototype.enableEncryption = undefined;

/**
 * KmsEncryptionContext is a json blob that contains an encryption context. See https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context for more information
 * @member {String} kmsEncryptionContext
 */
IoArgoprojWorkflowV1alpha1S3EncryptionOptions.prototype.kmsEncryptionContext = undefined;

/**
 * KMSKeyId tells the driver to encrypt the object using the specified KMS Key.
 * @member {String} kmsKeyId
 */
IoArgoprojWorkflowV1alpha1S3EncryptionOptions.prototype.kmsKeyId = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1SecretKeySelector} serverSideCustomerKeySecret
 */
IoArgoprojWorkflowV1alpha1S3EncryptionOptions.prototype.serverSideCustomerKeySecret = undefined;

module.exports = IoArgoprojWorkflowV1alpha1S3EncryptionOptions;
