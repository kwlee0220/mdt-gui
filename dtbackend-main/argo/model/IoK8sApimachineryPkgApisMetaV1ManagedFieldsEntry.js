/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * OpenAPI spec version: VERSION
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.63-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */
const ApiClient = require('../ApiClient');
const IoK8sApimachineryPkgApisMetaV1FieldsV1 = require('./IoK8sApimachineryPkgApisMetaV1FieldsV1');
const IoK8sApimachineryPkgApisMetaV1Time = require('./IoK8sApimachineryPkgApisMetaV1Time');

/**
 * The IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry model module.
 * @module model/IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
 * @version VERSION
 */
class IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry {
  /**
   * Constructs a new <code>IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry</code>.
   * ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
   * @alias module:model/IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry} obj Optional instance to populate.
   * @return {module:model/IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry} The populated <code>IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry();
      if (data.hasOwnProperty('apiVersion'))
        obj.apiVersion = ApiClient.convertToType(data['apiVersion'], 'String');
      if (data.hasOwnProperty('fieldsType'))
        obj.fieldsType = ApiClient.convertToType(data['fieldsType'], 'String');
      if (data.hasOwnProperty('fieldsV1'))
        obj.fieldsV1 = IoK8sApimachineryPkgApisMetaV1FieldsV1.constructFromObject(data['fieldsV1']);
      if (data.hasOwnProperty('manager'))
        obj.manager = ApiClient.convertToType(data['manager'], 'String');
      if (data.hasOwnProperty('operation'))
        obj.operation = ApiClient.convertToType(data['operation'], 'String');
      if (data.hasOwnProperty('subresource'))
        obj.subresource = ApiClient.convertToType(data['subresource'], 'String');
      if (data.hasOwnProperty('time'))
        obj.time = IoK8sApimachineryPkgApisMetaV1Time.constructFromObject(data['time']);
    }
    return obj;
  }
}

/**
 * APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
 * @member {String} apiVersion
 */
IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.prototype.apiVersion = undefined;

/**
 * FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"
 * @member {String} fieldsType
 */
IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.prototype.fieldsType = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1FieldsV1} fieldsV1
 */
IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.prototype.fieldsV1 = undefined;

/**
 * Manager is an identifier of the workflow managing these fields.
 * @member {String} manager
 */
IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.prototype.manager = undefined;

/**
 * Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
 * @member {String} operation
 */
IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.prototype.operation = undefined;

/**
 * Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.
 * @member {String} subresource
 */
IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.prototype.subresource = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1Time} time
 */
IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry.prototype.time = undefined;

module.exports = IoK8sApimachineryPkgApisMetaV1ManagedFieldsEntry;
